<?php
// Call GtkTreeViewTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "GtkTreeViewTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

// You may remove the following line when all tests have been implemented.
require_once "PHPUnit/Framework/IncompleteTestError.php";

/**
 * Test class for GtkTreeView.
 * Generated by PHPUnit_Util_Skeleton on 2006-03-07 at 11:37:05.
 */
class GtkTreeViewTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("GtkTreeViewTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
        $this->tv = new GtkTreeView();
    }

    protected function setUpMore() {
        $wnd = new GtkWindow();
        $wnd->add($this->tv);
        $this->tv->realize();

        $this->mod = new GtkListStore(Gtk::TYPE_STRING);
        $this->tv->set_model($this->mod);
        $this->col = new GtkTreeViewColumn('Title', new GtkCellRendererText(), 'text', 0);
        $this->tv->append_column($this->col);
        $this->mod->append(array('One'));
        $this->mod->append(array('Two'));
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    /**
     * @todo Implement testAppend_column().
     */
    public function testAppend_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testCollapse_all().
     */
    public function testCollapse_all() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testCollapse_row().
     */
    public function testCollapse_row() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testColumns_autosize().
     */
    public function testColumns_autosize() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testCreate_row_drag_icon().
     */
    public function testCreate_row_drag_icon() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testExpand_all().
     */
    public function testExpand_all() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testExpand_row().
     */
    public function testExpand_row() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testExpand_to_path().
     */
    public function testExpand_to_path() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     *
     */
    public function testGet_background_area() {
        $this->setUpMore();

        $rect = $this->tv->get_background_area('1', $this->col);
        $this->assertNotNull($rect);
        $this->assertEquals('GdkRectangle', get_class($rect));
    }

    /**
     * @todo Implement testGet_bin_window().
     */
    public function testGet_bin_window() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     *
     */
    public function testGet_cell_area() {
        $this->setUpMore();

        $rect = $this->tv->get_cell_area('1', $this->col);
        $this->assertNotNull($rect);
        $this->assertEquals('GdkRectangle', get_class($rect));
    }

    /**
     * @todo Implement testGet_column().
     */
    public function testGet_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_cursor().
     */
    public function testGet_cursor() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_enable_search().
     */
    public function testGet_enable_search() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_expander_column().
     */
    public function testGet_expander_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_fixed_height_mode().
     */
    public function testGet_fixed_height_mode() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_hadjustment().
     */
    public function testGet_hadjustment() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_headers_visible().
     */
    public function testGet_headers_visible() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_hover_expand().
     */
    public function testGet_hover_expand() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_hover_selection().
     */
    public function testGet_hover_selection() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_model().
     */
    public function testGet_model() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_path_at_pos().
     */
    public function testGet_path_at_pos() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_reorderable().
     */
    public function testGet_reorderable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_rules_hint().
     */
    public function testGet_rules_hint() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_search_column().
     */
    public function testGet_search_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_selection().
     */
    public function testGet_selection() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_vadjustment().
     */
    public function testGet_vadjustment() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     *
     */
    public function testGet_visible_rect() {
        $rect = $this->tv->get_visible_rect();
        $this->assertEquals('GdkRectangle', get_class($rect));
        $this->assertNotNull($rect);
        //this values *should* be null as the view isn't visible
        $this->assertEquals(0, $rect->x);
        $this->assertEquals(0, $rect->y);
    }

    /**
     * @todo Implement testInsert_column().
     */
    public function testInsert_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testInsert_column_with_data_func().
     */
    public function testInsert_column_with_data_func() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testMove_column_after().
     */
    public function testMove_column_after() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testRemove_column().
     */
    public function testRemove_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testRow_activated().
     */
    public function testRow_activated() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testRow_expanded().
     */
    public function testRow_expanded() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testScroll_to_cell().
     */
    public function testScroll_to_cell() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testScroll_to_point().
     */
    public function testScroll_to_point() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_cursor().
     */
    public function testSet_cursor() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_cursor_on_cell().
     */
    public function testSet_cursor_on_cell() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_drag_dest_row().
     */
    public function testSet_drag_dest_row() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_enable_search().
     */
    public function testSet_enable_search() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_expander_column().
     */
    public function testSet_expander_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_fixed_height_mode().
     */
    public function testSet_fixed_height_mode() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_hadjustment().
     */
    public function testSet_hadjustment() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_headers_clickable().
     */
    public function testSet_headers_clickable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_headers_visible().
     */
    public function testSet_headers_visible() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_hover_expand().
     */
    public function testSet_hover_expand() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_hover_selection().
     */
    public function testSet_hover_selection() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_model().
     */
    public function testSet_model() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_reorderable().
     */
    public function testSet_reorderable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_rules_hint().
     */
    public function testSet_rules_hint() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_search_column().
     */
    public function testSet_search_column() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_vadjustment().
     */
    public function testSet_vadjustment() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testTree_to_widget_coords().
     */
    public function testTree_to_widget_coords() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testUnset_rows_drag_dest().
     */
    public function testUnset_rows_drag_dest() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testUnset_rows_drag_source().
     */
    public function testUnset_rows_drag_source() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testWidget_to_tree_coords().
     */
    public function testWidget_to_tree_coords() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }
}

// Call GtkTreeViewTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "GtkTreeViewTest::main") {
    GtkTreeViewTest::main();
}
?>
