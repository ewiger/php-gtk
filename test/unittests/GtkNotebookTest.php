<?php
// Call GtkNotebookTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "GtkNotebookTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

// You may remove the following line when all tests have been implemented.
require_once "PHPUnit/Framework/IncompleteTestError.php";



/**
 * Test class for GtkNotebook.
 * Generated by PHPUnit_Util_Skeleton on 2006-03-07 at 13:26:41.
 */
class GtkNotebookTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("GtkNotebookTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    /**
     * @todo Implement testAppend_page().
     */
    public function testAppend_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testAppend_page_menu().
     */
    public function testAppend_page_menu() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testCurrent_page().
     */
    public function testCurrent_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_current_page().
     */
    public function testGet_current_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_menu_label().
     */
    public function testGet_menu_label() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_menu_label_text().
     */
    public function testGet_menu_label_text() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_n_pages().
     */
    public function testGet_n_pages() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_nth_page().
     */
    public function testGet_nth_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_scrollable().
     */
    public function testGet_scrollable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_show_border().
     */
    public function testGet_show_border() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_show_tabs().
     */
    public function testGet_show_tabs() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_tab_label().
     */
    public function testGet_tab_label() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_tab_label_text().
     */
    public function testGet_tab_label_text() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testGet_tab_pos().
     */
    public function testGet_tab_pos() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testInsert_page().
     */
    public function testInsert_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testInsert_page_menu().
     */
    public function testInsert_page_menu() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testNext_page().
     */
    public function testNext_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testPage_num().
     */
    public function testPage_num() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testPopup_disable().
     */
    public function testPopup_disable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testPopup_enable().
     */
    public function testPopup_enable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testPrepend_page().
     */
    public function testPrepend_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testPrepend_page_menu().
     */
    public function testPrepend_page_menu() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testPrev_page().
     */
    public function testPrev_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     *
    */
    public function testQuery_tab_label_packing() {
        $nb = new GtkNotebook();
        $nb->append_page($c1 = new GtkLabel('Page 1'), new GtkLabel('Tab 1'));
        $nb->set_tab_label_packing($c1, true, true, Gtk::PACK_START);
        list($expand, $fill, $pack_type) = $nb->query_tab_label_packing($c1);

        $this->assertTrue($expand);
        $this->assertTrue($fill);
        $this->assertEquals(Gtk::PACK_START, $pack_type);


        $nb->append_page($c2 = new GtkLabel('Page 2'), new GtkLabel('Tab 2'));
        $nb->set_tab_label_packing($c2, true, false, Gtk::PACK_START);
        list($expand, $fill, $pack_type) = $nb->query_tab_label_packing($c2);

        $this->assertTrue($expand);
        $this->assertFalse($fill);
        $this->assertEquals(Gtk::PACK_START, $pack_type);


        $nb->prepend_page($c3 = new GtkLabel('Page 3'), new GtkLabel('Tab 3'));
        $nb->set_tab_label_packing($c3, false, false, Gtk::PACK_END);
        list($expand, $fill, $pack_type) = $nb->query_tab_label_packing($c3);

        $this->assertFalse($expand);
        $this->assertFalse($fill);
        $this->assertEquals(Gtk::PACK_END, $pack_type);
    }

    /**
     * @todo Implement testRemove_page().
     */
    public function testRemove_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testReorder_child().
     */
    public function testReorder_child() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_current_page().
     */
    public function testSet_current_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_homogeneous_tabs().
     */
    public function testSet_homogeneous_tabs() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_menu_label().
     */
    public function testSet_menu_label() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_menu_label_text().
     */
    public function testSet_menu_label_text() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_page().
     */
    public function testSet_page() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_scrollable().
     */
    public function testSet_scrollable() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_show_border().
     */
    public function testSet_show_border() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_show_tabs().
     */
    public function testSet_show_tabs() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_border().
     */
    public function testSet_tab_border() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_hborder().
     */
    public function testSet_tab_hborder() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_label().
     */
    public function testSet_tab_label() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_label_packing().
     */
    public function testSet_tab_label_packing() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_label_text().
     */
    public function testSet_tab_label_text() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_pos().
     */
    public function testSet_tab_pos() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }

    /**
     * @todo Implement testSet_tab_vborder().
     */
    public function testSet_tab_vborder() {
        // Remove the following line when you implement this test.
        throw new PHPUnit_Framework_IncompleteTestError;
    }
}

// Call GtkNotebookTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "GtkNotebookTest::main") {
    GtkNotebookTest::main();
}
?>
