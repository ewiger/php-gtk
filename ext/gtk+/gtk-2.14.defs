;; -*- scheme -*-
(include "gtk-2.14-types.defs")
(include "gtk-2.12.defs")

;; From gtkaccelgroup.h

(define-method get_is_locked
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_get_is_locked")
  (return-type "gboolean")
)

(define-method get_modifier_mask
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_get_modifier_mask")
  (return-type "GdkModifierType")
)



;; From gtkadjustment.h

(define-method get_lower
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_lower")
  (return-type "gdouble")
)

(define-method set_lower
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_lower")
  (return-type "none")
  (parameters
    '("gdouble" "lower")
  )
)

(define-method get_upper
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_upper")
  (return-type "gdouble")
)

(define-method set_upper
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_upper")
  (return-type "none")
  (parameters
    '("gdouble" "upper")
  )
)

(define-method get_step_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_step_increment")
  (return-type "gdouble")
)

(define-method set_step_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_step_increment")
  (return-type "none")
  (parameters
    '("gdouble" "step_increment")
  )
)

(define-method get_page_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_page_increment")
  (return-type "gdouble")
)

(define-method set_page_increment
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_page_increment")
  (return-type "none")
  (parameters
    '("gdouble" "page_increment")
  )
)

(define-method get_page_size
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_page_size")
  (return-type "gdouble")
)

(define-method set_page_size
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_page_size")
  (return-type "none")
  (parameters
    '("gdouble" "page_size")
  )
)

(define-method configure
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_configure")
  (return-type "none")
  (parameters
    '("gdouble" "value")
    '("gdouble" "lower")
    '("gdouble" "upper")
    '("gdouble" "step_increment")
    '("gdouble" "page_increment")
    '("gdouble" "page_size")
  )
)



;; From gtkbuilder.h

(define-method add_objects_from_file
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_objects_from_file")
  (return-type "guint")
  (parameters
    '("const-gchar*" "filename")
    '("gchar**" "object_ids")
    '("GError**" "error")
  )
)

(define-method add_objects_from_string
  (of-object "GtkBuilder")
  (c-name "gtk_builder_add_objects_from_string")
  (return-type "guint")
  (parameters
    '("const-gchar*" "buffer")
    '("gsize" "length")
    '("gchar**" "object_ids")
    '("GError**" "error")
  )
)



;; From gtkcalendar.h

(define-method set_detail_func
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_detail_func")
  (return-type "none")
  (parameters
    '("GtkCalendarDetailFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_detail_width_chars
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_detail_width_chars")
  (return-type "none")
  (parameters
    '("gint" "chars")
  )
)

(define-method set_detail_height_rows
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_detail_height_rows")
  (return-type "none")
  (parameters
    '("gint" "rows")
  )
)

(define-method get_detail_width_chars
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_detail_width_chars")
  (return-type "gint")
)

(define-method get_detail_height_rows
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_detail_height_rows")
  (return-type "gint")
)



;; From gtkclipboard.h

(define-method wait_is_uris_available
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_is_uris_available")
  (return-type "gboolean")
)

(define-method wait_for_uris
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_uris")
  (return-type "gchar**")
)

(define-method request_uris
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_uris")
  (return-type "none")
  (parameters
    '("GtkClipboardURIReceivedFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method set_visited
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_set_visited")
  (return-type "none")
  (parameters
    '("gboolean" "visited")
  )
)

(define-method get_visited
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_get_visited")
  (return-type "gboolean")
)

(define-function gtk_border_new
  (is-constructor-of "GtkBorder")
  (c-name "gtk_border_new")
  (caller-owns-return #t)
  (return-type "GtkBorder")
)

;; From gtkcolorseldialog.h

(define-method get_color_selection
  (of-object "GtkColorSelectionDialog")
  (c-name "gtk_color_selection_dialog_get_color_selection")
  (return-type "GtkWidget*")
)

(define-function gtk_hsv_new
  (c-name "gtk_hsv_new")
  (is-constructor-of "GtkHsv")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_color
  (of-object "GtkHsv")
  (c-name "gtk_hsv_get_color")
  (return-type "none")
  (parameters
    '("gdouble*" "h")
    '("gdouble*" "s")
    '("gdouble*" "v")
  )
)

(define-method set_color
  (of-object "GtkHsv")
  (c-name "gtk_hsv_get_color")
  (return-type "none")
  (parameters
    '("gdouble" "h")
    '("gdouble" "s")
    '("gdouble" "v")
  )
)

(define-method is_adjusting
  (of-object "GtkHsv")
  (c-name "gtk_hsv_is_adjusting")
  (return-type "gboolean")
)

(define-method get_metrics
  (of-object "GtkHsv")
  (c-name "gtk_hsv_get_metrics")
  (return-type "none")
  (parameters
    '("gint*" "size")
    '("gint*" "ring_width")
  )
)

(define-method set_metrics
  (of-object "GtkHsv")
  (c-name "gtk_hsv_set_metrics")
  (return-type "none")
  (parameters
    '("gint" "size")
    '("gint" "ring_width")
  )
)

(define-method rgb_to_hsv
  (of-object "GtkHsv")
  (c-name "gtk_rgb_to_hsv")
  (static #t)
  (return-type "none")
  (parameters
    '("gdouble" "r")
    '("gdouble" "g")
    '("gdouble" "b")
    '("gdouble" "*h")
    '("gdouble" "*s")
    '("gdouble" "*v")
  )
)

(define-method hsv_to_rgb
  (of-object "GtkHsv")
  (c-name "gtk_hsv_to_rgb")
  (static #t)
  (return-type "none")
  (parameters
    '("gdouble" "h")
    '("gdouble" "s")
    '("gdouble" "v")
    '("gdouble" "*r")
    '("gdouble" "*g")
    '("gdouble" "*b")
  )
)

;; From gtkcombobox.h

(define-method set_button_sensitivity
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_button_sensitivity")
  (return-type "none")
  (parameters
    '("GtkSensitivityType" "sensitivity")
  )
)

(define-method get_button_sensitivity
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_button_sensitivity")
  (return-type "GtkSensitivityType")
)



;; From gtkcontainer.h

(define-method get_focus_child
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_child")
  (return-type "GtkWidget*")
)



;; From gtkdialog.h

(define-method get_action_area
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_action_area")
  (return-type "GtkWidget*")
)

(define-method get_content_area
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_content_area")
  (return-type "GtkWidget*")
)



;; From gtkentry.h

(define-method set_overwrite_mode
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_overwrite_mode")
  (return-type "none")
  (parameters
    '("gboolean" "overwrite")
  )
)

(define-method get_overwrite_mode
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_overwrite_mode")
  (return-type "gboolean")
)

(define-method get_text_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_text_length")
  (return-type "guint16")
)



;; From gtkfilechooser.h

(define-method get_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_file")
  (return-type "GFile*")
)

(define-method set_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_file")
  (return-type "gboolean")
  (parameters
    '("GFile*" "file")
    '("GError**" "error")
  )
)

(define-method select_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_file")
  (return-type "gboolean")
  (parameters
    '("GFile*" "file")
    '("GError**" "error")
  )
)

(define-method unselect_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_file")
  (return-type "none")
  (parameters
    '("GFile*" "file")
  )
)

(define-method get_files
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_files")
  (return-type "GSList*")
)

(define-method set_current_folder_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_folder_file")
  (return-type "gboolean")
  (parameters
    '("GFile*" "file")
    '("GError**" "error")
  )
)

(define-method get_current_folder_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_folder_file")
  (return-type "GFile*")
)

(define-method get_preview_file
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_file")
  (return-type "GFile*")
)



;; From gtkfontsel.h

(define-method get_ok_button
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_ok_button")
  (return-type "GtkWidget*")
)

(define-method get_apply_button
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_apply_button")
  (return-type "GtkWidget*")
  (deprecated "don't use this method")
)

(define-method get_cancel_button
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_cancel_button")
  (return-type "GtkWidget*")
)

(define-method get_family_list
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_family_list")
  (return-type "GtkWidget*")
)

(define-method get_face_list
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_face_list")
  (return-type "GtkWidget*")
)

(define-method get_size_entry
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_size_entry")
  (return-type "GtkWidget*")
)

(define-method get_size_list
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_size_list")
  (return-type "GtkWidget*")
)
(define-method get_preview_entry
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_preview_entry")
  (return-type "GtkWidget*")
)

(define-method get_family
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_family")
  (return-type "PangoFontFamily*")
)

(define-method get_face
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_face")
  (return-type "PangoFontFace*")
)

(define-method get_size
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_size")
  (return-type "gint")
)



;; From gtkhandlebox.h

(define-method get_child_detached
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_child_detached")
  (return-type "gboolean")
)



;; From gtkicontheme.h

(define-function icon_info_new_for_pixbuf
  (c-name "gtk_icon_info_new_for_pixbuf")
  (return-type "GtkIconInfo*")
  (parameters
    '("GtkIconTheme*" "icon_theme")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method lookup_by_gicon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_lookup_by_gicon")
  (return-type "GtkIconInfo*")
  (parameters
    '("GIcon*" "icon")
    '("gint" "size")
    '("GtkIconLookupFlags" "flags")
  )
)



;; From gtkimage.h

(define-method set_from_gicon
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_gicon")
  (return-type "none")
  (parameters
    '("GIcon*" "icon")
    '("GtkIconSize" "size")
  )
)

(define-function image_new_from_gicon
  (c-name "gtk_image_new_from_gicon")
  (return-type "GtkWidget*")
  (parameters
    '("GIcon*" "icon")
    '("GtkIconSize" "size")
  )
)

(define-method get_gicon
  (of-object "GtkImage")
  (c-name "gtk_image_get_gicon")
  (return-type "none")
  (parameters
    '("GIcon**" "gicon")
    '("GtkIconSize*" "size")
  )
)



;; From gtklayout.h

(define-method get_bin_window
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_bin_window")
  (return-type "GdkWindow*")
)



;; From gtkmenu.h

(define-method get_accel_path
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_accel_path")
  (return-type "const-gchar*")
)

(define-method get_monitor
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_monitor")
  (return-type "gint")
)



;; From gtkmenuitem.h

(define-method get_accel_path
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_get_accel_path")
  (return-type "const-gchar*")
)



;; From gtkmessagedialog.h

(define-method get_image
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_get_image")
  (return-type "GtkWidget*")
)



;; From gtkmountoperation.h

(define-function gtk_mount_operation_get_type
  (c-name "gtk_mount_operation_get_type")
  (return-type "GType")
)

(define-function gtk_mount_operation_new
  (c-name "gtk_mount_operation_new")
  (is-constructor-of "GtkMountOperation")
  (return-type "GMountOperation*")
  (properties
    '("parent" (default "NULL") (optional))
  )
)

(define-method is_showing
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_is_showing")
  (return-type "gboolean")
)

(define-method set_parent
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_set_parent")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method get_parent
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_get_parent")
  (return-type "GtkWindow*")
)

(define-method set_screen
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method get_screen
  (of-object "GtkMountOperation")
  (c-name "gtk_mount_operation_get_screen")
  (return-type "GdkScreen*")
)



;; From gtkplug.h

(define-method get_embedded
  (of-object "GtkPlug")
  (c-name "gtk_plug_get_embedded")
  (return-type "gboolean")
)

(define-method get_socket_window
  (of-object "GtkPlug")
  (c-name "gtk_plug_get_socket_window")
  (return-type "GdkWindow*")
)



;; From gtkpagesetup.h

(define-method load_key_file
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_load_key_file")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("GError**" "error")
  )
)

(define-method load_file
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_load_file")
  (return-type "gboolean")
  (parameters
    '("const-char*" "file_name")
    '("GError**" "error")
  )
)



;; From gtkprintsettings.h

(define-method load_key_file
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_load_key_file")
  (return-type "gboolean")
  (parameters
    '("GKeyFile*" "key_file")
    '("const-gchar*" "group_name")
    '("GError**" "error")
  )
)

(define-method load_file
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_load_file")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "file_name")
    '("GError**" "error")
  )
)

(define-method get_number_up_layout
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_number_up_layout")
  (return-type "GtkNumberUpLayout")
)

(define-method set_number_up_layout
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_number_up_layout")
  (return-type "none")
  (parameters
    '("GtkNumberUpLayout" "number_up_layout")
  )
)

;; From gtkscalebutton.h

(define-method get_orientation
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_orientation")
  (return-type "GtkOrientation")
)

(define-method set_orientation
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_plus_button
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_plus_button")
  (return-type "GtkWidget*")
)

(define-method get_minus_button
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_minus_button")
  (return-type "GtkWidget*")
)

(define-method get_popup
  (of-object "GtkScaleButton")
  (c-name "gtk_scale_button_get_popup")
  (return-type "GtkWidget*")
)



;; From gtkselection.h

(define-method get_target
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_target")
  (return-type "GdkAtom")
)

(define-method get_data_type
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_data_type")
  (return-type "GdkAtom")
)

(define-method get_format
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_format")
  (return-type "gint")
)

(define-method get_data
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_data")
  (return-type "const-guchar*")
)

(define-method get_length
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_length")
  (return-type "gint")
)


(define-method get_display
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_display")
  (return-type "GdkDisplay*")
)

;; From gtkshow.h

(define-function show_uri
  (c-name "gtk_show_uri")
  (return-type "gboolean")
  (parameters
    '("GdkScreen*" "screen" (null-ok))
    '("const-gchar*" "uri")
    '("guint32" "timestamp")
    '("GError**" "error")
  )
)



;; From gtksocket.h

(define-method get_plug_window
  (of-object "GtkSocket")
  (c-name "gtk_socket_get_plug_window")
  (return-type "GdkWindow*")
)



;; From gtkstatusicon.h

(define-function status_icon_new_from_gicon
  (c-name "gtk_status_icon_new_from_gicon")
  (return-type "GtkStatusIcon*")
  (parameters
    '("GIcon*" "icon")
  )
)

(define-method get_x11_window_id
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_x11_window_id")
  (return-type "guint32")
)

(define-method get_gicon
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_gicon")
  (return-type "GIcon*")
)

(define-method set_from_gicon
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_from_gicon")
  (return-type "none")
  (parameters
    '("GIcon*" "icon")
  )
)



;; From gtktooltip.h

(define-method set_icon_from_icon_name
  (of-object "GtkTooltip")
  (c-name "gtk_tooltip_set_icon_from_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name" (null-ok))
    '("GtkIconSize" "size")
  )
)



;; From gtktoolitem.h

(define-method toolbar_reconfigured
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_toolbar_reconfigured")
  (return-type "none")
)



;; From gtktoolshell.h

(define-method get_icon_size
  (of-object "GtkToolShell")
  (c-name "gtk_tool_shell_get_icon_size")
  (return-type "GtkIconSize")
)

(define-method get_orientation
  (of-object "GtkToolShell")
  (c-name "gtk_tool_shell_get_orientation")
  (return-type "GtkOrientation")
)

(define-method get_style
  (of-object "GtkToolShell")
  (c-name "gtk_tool_shell_get_style")
  (return-type "GtkToolbarStyle")
)

(define-method get_relief_style
  (of-object "GtkToolShell")
  (c-name "gtk_tool_shell_get_relief_style")
  (return-type "GtkReliefStyle")
)

(define-method rebuild_menu
  (of-object "GtkToolShell")
  (c-name "gtk_tool_shell_rebuild_menu")
  (return-type "none")
)

;; From gtktreeselection.h

(define-method get_select_function
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_select_function")
  (return-type "GtkTreeSelectionFunc")
)



;; From gtkwidget.h

(define-method get_snapshot
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_snapshot")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkRectangle*" "clip_rect" (null-ok) (default "NULL"))
  )
)

(define-method get_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_window")
  (return-type "GdkWindow*")
)



;; From gtkwindow.h

(define-method get_default_widget
  (of-object "GtkWindow")
  (c-name "gtk_window_get_default_widget")
  (return-type "GtkWidget*")
)

(define-method list_windows
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_list_windows")
  (return-type "GList*")
)
