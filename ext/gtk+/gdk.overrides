/* vim: set ft=cpp et: */
/* TODO
 * fix gdk_gc_new2
 */
%%
headers
#include <gdk-pixbuf/gdk-pixbuf.h>

#if defined(GDK_WINDOWING_X11)
#include <gdk/gdkx.h>
#elif defined(GDK_WINDOWING_WIN32)
#include <gdk/gdkwin32.h>
#endif

/* make GDK_DISPLAY() the case macro */
#undef GDK_DISPLAY
#define GDK_DISPLAY(object) (GDK_DISPLAY_OBJECT(object))

/* Forward declaration, since gen_gtk.h is generated later. */
extern PHP_GTK_EXPORT_CE(gtkwidget_ce);

#include "gen_pango.h"

%%
ignore
    GdkDebugFlag
    GdkColorInfoFlags
%%
ignore
    gdk_pixmap_new
    gdk_gc_new2

%%
override gdk_color_new
PHP_METHOD(GdkColor, __construct)
{
    /* TODO */
}

%%
override gdk_rectangle_new
PHP_METHOD(GdkRectangle, __construct)
{
    phpg_gboxed_t *pobj = NULL;
    GdkRectangle rect = { 0, 0, 0, 0 };

    if (!php_gtk_parse_args(ZEND_NUM_ARGS(), "iiii", &(rect.x), &(rect.y),
                            &(rect.width), &(rect.height))) {
        PHPG_THROW_CONSTRUCT_EXCEPTION();
    }

    pobj = zend_object_store_get_object(this_ptr TSRMLS_CC);
    pobj->gtype = GDK_TYPE_RECTANGLE;
    pobj->boxed = g_boxed_copy(GDK_TYPE_RECTANGLE, &rect);
    pobj->free_on_destroy = TRUE;
}

%%
override gdk_rectangle_intersect
PHP_METHOD(GdkRectangle, intersect)
{
    /* TODO */
}

%%
override-prop GdkDrawable xid
PHPG_PROP_READER(GdkDrawable, xid)
{
    /* TODO */
    return SUCCESS;
}

%%override-prop GdkPixbuf pixel_array
PHPG_PROP_READER(GdkPixbuf, pixel_array)
{
    /* TODO */
    return SUCCESS;
}
