;; -*- scheme -*-
;; Structs

(struct Rectangle
  (in-module Gdk)
  (c-name GdkRectangle)
  (field (type-and-name gint16 x))
  (field (type-and-name gint16 y))
  (field (type-and-name guint16 width))
  (field (type-and-name guint16 height))
)

(struct Point
  (in-module Gdk)
  (c-name GdkPoint)
  (field (type-and-name gint16 x))
  (field (type-and-name gint16 y))
)

;; Enumerations and flags ...

(flags ColorInfoFlags
  (in-module Gdk)
  (c-name GdkColorInfoFlags)
  (value (name writable) (c-name GDK_COLOR_WRITEABLE))
)

(flags DebugFlag
  (in-module Gdk)
  (c-name GdkDebugFlag)
  (value (name misc) (c-name GDK_DEBUG_MISC))
  (value (name events) (c-name GDK_DEBUG_EVENTS))
  (value (name dnd) (c-name GDK_DEBUG_DND))
  (value (name color-context) (c-name GDK_DEBUG_COLOR_CONTEXT))
  (value (name xim) (c-name GDK_DEBUG_XIM))
)

(enum RgbDither
  (in-module Gdk)
  (c-name GdkRgbDither)
  (value (name none) (c-name GDK_RGB_DITHER_NONE))
  (value (name normal) (c-name GDK_RGB_DITHER_NORMAL))
  (value (name max) (c-name GDK_RGB_DITHER_MAX))
)

(enum WindowType
  (in-module Gdk)
  (c-name GdkWindowType)
  (value (name root) (c-name GDK_WINDOW_ROOT))
  (value (name toplevel) (c-name GDK_WINDOW_TOPLEVEL))
  (value (name child) (c-name GDK_WINDOW_CHILD))
  (value (name dialog) (c-name GDK_WINDOW_DIALOG))
  (value (name temp) (c-name GDK_WINDOW_TEMP))
  (value (name pixmap) (c-name GDK_WINDOW_PIXMAP))
  (value (name foreign) (c-name GDK_WINDOW_FOREIGN))
)

(enum WindowClass
  (in-module Gdk)
  (c-name GdkWindowClass)
  (value (name utput) (c-name GDK_INPUT_OUTPUT))
  (value (name nly) (c-name GDK_INPUT_ONLY))
)

(enum ImageType
  (in-module Gdk)
  (c-name GdkImageType)
  (value (name normal) (c-name GDK_IMAGE_NORMAL))
  (value (name shared) (c-name GDK_IMAGE_SHARED))
  (value (name fastest) (c-name GDK_IMAGE_FASTEST))
)

(enum VisualType
  (in-module Gdk)
  (c-name GdkVisualType)
  (value (name static-gray) (c-name GDK_VISUAL_STATIC_GRAY))
  (value (name grayscale) (c-name GDK_VISUAL_GRAYSCALE))
  (value (name static-color) (c-name GDK_VISUAL_STATIC_COLOR))
  (value (name pseudo-color) (c-name GDK_VISUAL_PSEUDO_COLOR))
  (value (name true-color) (c-name GDK_VISUAL_TRUE_COLOR))
  (value (name direct-color) (c-name GDK_VISUAL_DIRECT_COLOR))
)

(enum FontType
  (in-module Gdk)
  (c-name GdkFontType)
  (value (name font) (c-name GDK_FONT_FONT))
  (value (name fontset) (c-name GDK_FONT_FONTSET))
)

(flags WindowAttributesType
  (in-module Gdk)
  (c-name GdkWindowAttributesType)
  (value (name title) (c-name GDK_WA_TITLE))
  (value (name x) (c-name GDK_WA_X))
  (value (name y) (c-name GDK_WA_Y))
  (value (name cursor) (c-name GDK_WA_CURSOR))
  (value (name colormap) (c-name GDK_WA_COLORMAP))
  (value (name visual) (c-name GDK_WA_VISUAL))
  (value (name wmclass) (c-name GDK_WA_WMCLASS))
  (value (name noredir) (c-name GDK_WA_NOREDIR))
)

(flags WindowHints
  (in-module Gdk)
  (c-name GdkWindowHints)
  (value (name pos) (c-name GDK_HINT_POS))
  (value (name min-size) (c-name GDK_HINT_MIN_SIZE))
  (value (name max-size) (c-name GDK_HINT_MAX_SIZE))
  (value (name base-size) (c-name GDK_HINT_BASE_SIZE))
  (value (name aspect) (c-name GDK_HINT_ASPECT))
  (value (name resize-inc) (c-name GDK_HINT_RESIZE_INC))
)

(enum Function
  (in-module Gdk)
  (c-name GdkFunction)
  (value (name copy) (c-name GDK_COPY))
  (value (name invert) (c-name GDK_INVERT))
  (value (name xor) (c-name GDK_XOR))
  (value (name clear) (c-name GDK_CLEAR))
  (value (name and) (c-name GDK_AND))
  (value (name and-reverse) (c-name GDK_AND_REVERSE))
  (value (name and-invert) (c-name GDK_AND_INVERT))
  (value (name noop) (c-name GDK_NOOP))
  (value (name or) (c-name GDK_OR))
  (value (name equiv) (c-name GDK_EQUIV))
  (value (name or-reverse) (c-name GDK_OR_REVERSE))
  (value (name copy-invert) (c-name GDK_COPY_INVERT))
  (value (name or-invert) (c-name GDK_OR_INVERT))
  (value (name nand) (c-name GDK_NAND))
  (value (name set) (c-name GDK_SET))
)

(enum Fill
  (in-module Gdk)
  (c-name GdkFill)
  (value (name solid) (c-name GDK_SOLID))
  (value (name tiled) (c-name GDK_TILED))
  (value (name stippled) (c-name GDK_STIPPLED))
  (value (name opaque-stippled) (c-name GDK_OPAQUE_STIPPLED))
)

(enum FillRule
  (in-module Gdk)
  (c-name GdkFillRule)
  (value (name even-odd-rule) (c-name GDK_EVEN_ODD_RULE))
  (value (name winding-rule) (c-name GDK_WINDING_RULE))
)

(enum LineStyle
  (in-module Gdk)
  (c-name GdkLineStyle)
  (value (name solid) (c-name GDK_LINE_SOLID))
  (value (name on-off-dash) (c-name GDK_LINE_ON_OFF_DASH))
  (value (name double-dash) (c-name GDK_LINE_DOUBLE_DASH))
)

(enum CapStyle
  (in-module Gdk)
  (c-name GdkCapStyle)
  (value (name not-last) (c-name GDK_CAP_NOT_LAST))
  (value (name butt) (c-name GDK_CAP_BUTT))
  (value (name round) (c-name GDK_CAP_ROUND))
  (value (name projecting) (c-name GDK_CAP_PROJECTING))
)

(enum JoinStyle
  (in-module Gdk)
  (c-name GdkJoinStyle)
  (value (name miter) (c-name GDK_JOIN_MITER))
  (value (name round) (c-name GDK_JOIN_ROUND))
  (value (name bevel) (c-name GDK_JOIN_BEVEL))
)

(enum CursorType
  (in-module Gdk)
  (c-name GdkCursorType)
  (value (name is-pixmap) (c-name GDK_CURSOR_IS_PIXMAP))
)

(enum FilterReturn
  (in-module Gdk)
  (c-name GdkFilterReturn)
  (value (name continue) (c-name GDK_FILTER_CONTINUE))
  (value (name translate) (c-name GDK_FILTER_TRANSLATE))
  (value (name remove) (c-name GDK_FILTER_REMOVE))
)

(enum VisibilityState
  (in-module Gdk)
  (c-name GdkVisibilityState)
  (value (name unobscured) (c-name GDK_VISIBILITY_UNOBSCURED))
  (value (name partial) (c-name GDK_VISIBILITY_PARTIAL))
  (value (name fully-obscured) (c-name GDK_VISIBILITY_FULLY_OBSCURED))
)

(enum EventType
  (in-module Gdk)
  (c-name GdkEventType)
  (value (name nothing) (c-name GDK_NOTHING))
  (value (name delete) (c-name GDK_DELETE))
  (value (name destroy) (c-name GDK_DESTROY))
  (value (name expose) (c-name GDK_EXPOSE))
  (value (name motion-notify) (c-name GDK_MOTION_NOTIFY))
  (value (name button-press) (c-name GDK_BUTTON_PRESS))
  (value (name 2button-press) (c-name GDK_2BUTTON_PRESS))
  (value (name 3button-press) (c-name GDK_3BUTTON_PRESS))
  (value (name button-release) (c-name GDK_BUTTON_RELEASE))
  (value (name key-press) (c-name GDK_KEY_PRESS))
  (value (name key-release) (c-name GDK_KEY_RELEASE))
  (value (name enter-notify) (c-name GDK_ENTER_NOTIFY))
  (value (name leave-notify) (c-name GDK_LEAVE_NOTIFY))
  (value (name focus-change) (c-name GDK_FOCUS_CHANGE))
  (value (name configure) (c-name GDK_CONFIGURE))
  (value (name map) (c-name GDK_MAP))
  (value (name unmap) (c-name GDK_UNMAP))
  (value (name property-notify) (c-name GDK_PROPERTY_NOTIFY))
  (value (name selection-clear) (c-name GDK_SELECTION_CLEAR))
  (value (name selection-request) (c-name GDK_SELECTION_REQUEST))
  (value (name selection-notify) (c-name GDK_SELECTION_NOTIFY))
  (value (name proximity-in) (c-name GDK_PROXIMITY_IN))
  (value (name proximity-out) (c-name GDK_PROXIMITY_OUT))
  (value (name drag-enter) (c-name GDK_DRAG_ENTER))
  (value (name drag-leave) (c-name GDK_DRAG_LEAVE))
  (value (name drag-motion) (c-name GDK_DRAG_MOTION))
  (value (name drag-status) (c-name GDK_DRAG_STATUS))
  (value (name drop-start) (c-name GDK_DROP_START))
  (value (name drop-finished) (c-name GDK_DROP_FINISHED))
  (value (name client-event) (c-name GDK_CLIENT_EVENT))
  (value (name visibility-notify) (c-name GDK_VISIBILITY_NOTIFY))
  (value (name no-expose) (c-name GDK_NO_EXPOSE))
)

(flags EventMask
  (in-module Gdk)
  (c-name GdkEventMask)
  (value (name exposure-mask) (c-name GDK_EXPOSURE_MASK))
  (value (name pointer-motion-mask) (c-name GDK_POINTER_MOTION_MASK))
  (value (name pointer-motion-hint-mask) (c-name GDK_POINTER_MOTION_HINT_MASK))
  (value (name button-motion-mask) (c-name GDK_BUTTON_MOTION_MASK))
  (value (name button1-motion-mask) (c-name GDK_BUTTON1_MOTION_MASK))
  (value (name button2-motion-mask) (c-name GDK_BUTTON2_MOTION_MASK))
  (value (name button3-motion-mask) (c-name GDK_BUTTON3_MOTION_MASK))
  (value (name button-press-mask) (c-name GDK_BUTTON_PRESS_MASK))
  (value (name button-release-mask) (c-name GDK_BUTTON_RELEASE_MASK))
  (value (name key-press-mask) (c-name GDK_KEY_PRESS_MASK))
  (value (name key-release-mask) (c-name GDK_KEY_RELEASE_MASK))
  (value (name enter-notify-mask) (c-name GDK_ENTER_NOTIFY_MASK))
  (value (name leave-notify-mask) (c-name GDK_LEAVE_NOTIFY_MASK))
  (value (name focus-change-mask) (c-name GDK_FOCUS_CHANGE_MASK))
  (value (name structure-mask) (c-name GDK_STRUCTURE_MASK))
  (value (name property-change-mask) (c-name GDK_PROPERTY_CHANGE_MASK))
  (value (name visibility-notify-mask) (c-name GDK_VISIBILITY_NOTIFY_MASK))
  (value (name proximity-in-mask) (c-name GDK_PROXIMITY_IN_MASK))
  (value (name proximity-out-mask) (c-name GDK_PROXIMITY_OUT_MASK))
  (value (name substructure-mask) (c-name GDK_SUBSTRUCTURE_MASK))
  (value (name all-events-mask) (c-name GDK_ALL_EVENTS_MASK))
)

(enum NotifyType
  (in-module Gdk)
  (c-name GdkNotifyType)
  (value (name ancestor) (c-name GDK_NOTIFY_ANCESTOR))
  (value (name virtual) (c-name GDK_NOTIFY_VIRTUAL))
  (value (name inferior) (c-name GDK_NOTIFY_INFERIOR))
  (value (name nonlinear) (c-name GDK_NOTIFY_NONLINEAR))
  (value (name nonlinear-virtual) (c-name GDK_NOTIFY_NONLINEAR_VIRTUAL))
  (value (name unknown) (c-name GDK_NOTIFY_UNKNOWN))
)

(enum CrossingMode
  (in-module Gdk)
  (c-name GdkCrossingMode)
  (value (name normal) (c-name GDK_CROSSING_NORMAL))
  (value (name grab) (c-name GDK_CROSSING_GRAB))
  (value (name ungrab) (c-name GDK_CROSSING_UNGRAB))
)

(flags ModifierType
  (in-module Gdk)
  (c-name GdkModifierType)
  (value (name shift-mask) (c-name GDK_SHIFT_MASK))
  (value (name lock-mask) (c-name GDK_LOCK_MASK))
  (value (name control-mask) (c-name GDK_CONTROL_MASK))
  (value (name mod1-mask) (c-name GDK_MOD1_MASK))
  (value (name mod2-mask) (c-name GDK_MOD2_MASK))
  (value (name mod3-mask) (c-name GDK_MOD3_MASK))
  (value (name mod4-mask) (c-name GDK_MOD4_MASK))
  (value (name mod5-mask) (c-name GDK_MOD5_MASK))
  (value (name button1-mask) (c-name GDK_BUTTON1_MASK))
  (value (name button2-mask) (c-name GDK_BUTTON2_MASK))
  (value (name button3-mask) (c-name GDK_BUTTON3_MASK))
  (value (name button4-mask) (c-name GDK_BUTTON4_MASK))
  (value (name button5-mask) (c-name GDK_BUTTON5_MASK))
  (value (name release-mask) (c-name GDK_RELEASE_MASK))
  (value (name modifier-mask) (c-name GDK_MODIFIER_MASK))
)

(enum SubwindowMode
  (in-module Gdk)
  (c-name GdkSubwindowMode)
  (value (name clip-by-children) (c-name GDK_CLIP_BY_CHILDREN))
  (value (name include-inferiors) (c-name GDK_INCLUDE_INFERIORS))
)

(flags InputCondition
  (in-module Gdk)
  (c-name GdkInputCondition)
  (value (name read) (c-name GDK_INPUT_READ))
  (value (name write) (c-name GDK_INPUT_WRITE))
  (value (name exception) (c-name GDK_INPUT_EXCEPTION))
)

(enum Status
  (in-module Gdk)
  (c-name GdkStatus)
  (value (name ok) (c-name GDK_OK))
  (value (name error) (c-name GDK_ERROR))
  (value (name error-param) (c-name GDK_ERROR_PARAM))
  (value (name error-file) (c-name GDK_ERROR_FILE))
  (value (name error-mem) (c-name GDK_ERROR_MEM))
)

(enum ByteOrder
  (in-module Gdk)
  (c-name GdkByteOrder)
  (value (name lsb-first) (c-name GDK_LSB_FIRST))
  (value (name msb-first) (c-name GDK_MSB_FIRST))
)

(flags GCValuesMask
  (in-module Gdk)
  (c-name GdkGCValuesMask)
  (value (name foreground) (c-name GDK_GC_FOREGROUND))
  (value (name background) (c-name GDK_GC_BACKGROUND))
  (value (name font) (c-name GDK_GC_FONT))
  (value (name function) (c-name GDK_GC_FUNCTION))
  (value (name fill) (c-name GDK_GC_FILL))
  (value (name tile) (c-name GDK_GC_TILE))
  (value (name stipple) (c-name GDK_GC_STIPPLE))
  (value (name clip-mask) (c-name GDK_GC_CLIP_MASK))
  (value (name subwindow) (c-name GDK_GC_SUBWINDOW))
  (value (name ts-x-origin) (c-name GDK_GC_TS_X_ORIGIN))
  (value (name ts-y-origin) (c-name GDK_GC_TS_Y_ORIGIN))
  (value (name clip-x-origin) (c-name GDK_GC_CLIP_X_ORIGIN))
  (value (name clip-y-origin) (c-name GDK_GC_CLIP_Y_ORIGIN))
  (value (name exposures) (c-name GDK_GC_EXPOSURES))
  (value (name line-width) (c-name GDK_GC_LINE_WIDTH))
  (value (name line-style) (c-name GDK_GC_LINE_STYLE))
  (value (name cap-style) (c-name GDK_GC_CAP_STYLE))
  (value (name join-style) (c-name GDK_GC_JOIN_STYLE))
)

(enum Selection
  (in-module Gdk)
  (c-name GdkSelection)
  (value (name primary) (c-name GDK_SELECTION_PRIMARY))
  (value (name secondary) (c-name GDK_SELECTION_SECONDARY))
)

(enum PropertyState
  (in-module Gdk)
  (c-name GdkPropertyState)
  (value (name new-value) (c-name GDK_PROPERTY_NEW_VALUE))
  (value (name delete) (c-name GDK_PROPERTY_DELETE))
)

(enum PropMode
  (in-module Gdk)
  (c-name GdkPropMode)
  (value (name replace) (c-name GDK_PROP_MODE_REPLACE))
  (value (name prepend) (c-name GDK_PROP_MODE_PREPEND))
  (value (name append) (c-name GDK_PROP_MODE_APPEND))
)

(enum InputSource
  (in-module Gdk)
  (c-name GdkInputSource)
  (value (name mouse) (c-name GDK_SOURCE_MOUSE))
  (value (name pen) (c-name GDK_SOURCE_PEN))
  (value (name eraser) (c-name GDK_SOURCE_ERASER))
  (value (name cursor) (c-name GDK_SOURCE_CURSOR))
)

(enum InputMode
  (in-module Gdk)
  (c-name GdkInputMode)
  (value (name disabled) (c-name GDK_MODE_DISABLED))
  (value (name screen) (c-name GDK_MODE_SCREEN))
  (value (name window) (c-name GDK_MODE_WINDOW))
)

(enum AxisUse
  (in-module Gdk)
  (c-name GdkAxisUse)
  (value (name ignore) (c-name GDK_AXIS_IGNORE))
  (value (name x) (c-name GDK_AXIS_X))
  (value (name y) (c-name GDK_AXIS_Y))
  (value (name pressure) (c-name GDK_AXIS_PRESSURE))
  (value (name xtilt) (c-name GDK_AXIS_XTILT))
  (value (name ytilt) (c-name GDK_AXIS_YTILT))
  (value (name last) (c-name GDK_AXIS_LAST))
)

(enum Target
  (in-module Gdk)
  (c-name GdkTarget)
  (value (name bitmap) (c-name GDK_TARGET_BITMAP))
  (value (name colormap) (c-name GDK_TARGET_COLORMAP))
  (value (name drawable) (c-name GDK_TARGET_DRAWABLE))
  (value (name pixmap) (c-name GDK_TARGET_PIXMAP))
  (value (name string) (c-name GDK_TARGET_STRING))
)

(enum SelectionType
  (in-module Gdk)
  (c-name GdkSelectionType)
  (value (name atom) (c-name GDK_SELECTION_TYPE_ATOM))
  (value (name bitmap) (c-name GDK_SELECTION_TYPE_BITMAP))
  (value (name colormap) (c-name GDK_SELECTION_TYPE_COLORMAP))
  (value (name drawable) (c-name GDK_SELECTION_TYPE_DRAWABLE))
  (value (name integer) (c-name GDK_SELECTION_TYPE_INTEGER))
  (value (name pixmap) (c-name GDK_SELECTION_TYPE_PIXMAP))
  (value (name window) (c-name GDK_SELECTION_TYPE_WINDOW))
  (value (name string) (c-name GDK_SELECTION_TYPE_STRING))
)

(enum ExtensionMode
  (in-module Gdk)
  (c-name GdkExtensionMode)
  (value (name none) (c-name GDK_EXTENSION_EVENTS_NONE))
  (value (name all) (c-name GDK_EXTENSION_EVENTS_ALL))
  (value (name cursor) (c-name GDK_EXTENSION_EVENTS_CURSOR))
)

(enum IMStyle
  (in-module Gdk)
  (c-name GdkIMStyle)
  (value (name preedit-area) (c-name GDK_IM_PREEDIT_AREA))
  (value (name preedit-callbacks) (c-name GDK_IM_PREEDIT_CALLBACKS))
  (value (name preedit-position) (c-name GDK_IM_PREEDIT_POSITION))
  (value (name preedit-nothing) (c-name GDK_IM_PREEDIT_NOTHING))
  (value (name preedit-none) (c-name GDK_IM_PREEDIT_NONE))
  (value (name preedit-mask) (c-name GDK_IM_PREEDIT_MASK))
  (value (name status-area) (c-name GDK_IM_STATUS_AREA))
  (value (name status-callbacks) (c-name GDK_IM_STATUS_CALLBACKS))
  (value (name status-nothing) (c-name GDK_IM_STATUS_NOTHING))
  (value (name status-none) (c-name GDK_IM_STATUS_NONE))
  (value (name status-mask) (c-name GDK_IM_STATUS_MASK))
)

(flags ICAttributesType
  (in-module Gdk)
  (c-name GdkICAttributesType)
  (value (name style) (c-name GDK_IC_STYLE))
  (value (name client-window) (c-name GDK_IC_CLIENT_WINDOW))
  (value (name focus-window) (c-name GDK_IC_FOCUS_WINDOW))
  (value (name filter-events) (c-name GDK_IC_FILTER_EVENTS))
  (value (name spot-location) (c-name GDK_IC_SPOT_LOCATION))
  (value (name line-spacing) (c-name GDK_IC_LINE_SPACING))
  (value (name cursor) (c-name GDK_IC_CURSOR))
  (value (name preedit-fontset) (c-name GDK_IC_PREEDIT_FONTSET))
  (value (name preedit-area) (c-name GDK_IC_PREEDIT_AREA))
  (value (name preedit-area-needed) (c-name GDK_IC_PREEDIT_AREA_NEEDED))
  (value (name preedit-foreground) (c-name GDK_IC_PREEDIT_FOREGROUND))
  (value (name preedit-background) (c-name GDK_IC_PREEDIT_BACKGROUND))
  (value (name preedit-pixmap) (c-name GDK_IC_PREEDIT_PIXMAP))
  (value (name preedit-colormap) (c-name GDK_IC_PREEDIT_COLORMAP))
  (value (name status-fontset) (c-name GDK_IC_STATUS_FONTSET))
  (value (name status-area) (c-name GDK_IC_STATUS_AREA))
  (value (name status-area-needed) (c-name GDK_IC_STATUS_AREA_NEEDED))
  (value (name status-foreground) (c-name GDK_IC_STATUS_FOREGROUND))
  (value (name status-background) (c-name GDK_IC_STATUS_BACKGROUND))
  (value (name status-pixmap) (c-name GDK_IC_STATUS_PIXMAP))
  (value (name status-colormap) (c-name GDK_IC_STATUS_COLORMAP))
  (value (name all-req) (c-name GDK_IC_ALL_REQ))
  (value (name preedit-area-req) (c-name GDK_IC_PREEDIT_AREA_REQ))
  (value (name preedit-position-req) (c-name GDK_IC_PREEDIT_POSITION_REQ))
  (value (name status-area-req) (c-name GDK_IC_STATUS_AREA_REQ))
)

(flags WMDecoration
  (in-module Gdk)
  (c-name GdkWMDecoration)
  (value (name all) (c-name GDK_DECOR_ALL))
  (value (name border) (c-name GDK_DECOR_BORDER))
  (value (name resizeh) (c-name GDK_DECOR_RESIZEH))
  (value (name title) (c-name GDK_DECOR_TITLE))
  (value (name menu) (c-name GDK_DECOR_MENU))
  (value (name minimize) (c-name GDK_DECOR_MINIMIZE))
  (value (name maximize) (c-name GDK_DECOR_MAXIMIZE))
)

(flags WMFunction
  (in-module Gdk)
  (c-name GdkWMFunction)
  (value (name all) (c-name GDK_FUNC_ALL))
  (value (name resize) (c-name GDK_FUNC_RESIZE))
  (value (name move) (c-name GDK_FUNC_MOVE))
  (value (name minimize) (c-name GDK_FUNC_MINIMIZE))
  (value (name maximize) (c-name GDK_FUNC_MAXIMIZE))
  (value (name close) (c-name GDK_FUNC_CLOSE))
)

(enum ColorContextMode
  (in-module Gdk)
  (c-name GdkColorContextMode)
  (value (name undefined) (c-name GDK_CC_MODE_UNDEFINED))
  (value (name bw) (c-name GDK_CC_MODE_BW))
  (value (name std-cmap) (c-name GDK_CC_MODE_STD_CMAP))
  (value (name true) (c-name GDK_CC_MODE_TRUE))
  (value (name my-gray) (c-name GDK_CC_MODE_MY_GRAY))
  (value (name palette) (c-name GDK_CC_MODE_PALETTE))
)

(enum OverlapType
  (in-module Gdk)
  (c-name GdkOverlapType)
  (value (name in) (c-name GDK_OVERLAP_RECTANGLE_IN))
  (value (name out) (c-name GDK_OVERLAP_RECTANGLE_OUT))
  (value (name part) (c-name GDK_OVERLAP_RECTANGLE_PART))
)

(flags DragAction
  (in-module Gdk)
  (c-name GdkDragAction)
  (value (name default) (c-name GDK_ACTION_DEFAULT))
  (value (name copy) (c-name GDK_ACTION_COPY))
  (value (name move) (c-name GDK_ACTION_MOVE))
  (value (name link) (c-name GDK_ACTION_LINK))
  (value (name private) (c-name GDK_ACTION_PRIVATE))
  (value (name ask) (c-name GDK_ACTION_ASK))
)

(enum DragProtocol
  (in-module Gdk)
  (c-name GdkDragProtocol)
  (value (name motif) (c-name GDK_DRAG_PROTO_MOTIF))
  (value (name xdnd) (c-name GDK_DRAG_PROTO_XDND))
  (value (name rootwin) (c-name GDK_DRAG_PROTO_ROOTWIN))
  (value (name none) (c-name GDK_DRAG_PROTO_NONE))
)


;; From /usr/include/gdk/gdk.h

(function gdk_get_display
  (c-name gdk_get_display)
  (return-type gchar*)
)

(function input_remove
  (c-name gdk_input_remove)
  (return-type none)
  (parameter (type-and-name gint tag))
)

(function pointer_is_grabbed
  (c-name gdk_pointer_is_grabbed)
  (return-type gboolean)
)

(function screen_width
  (c-name gdk_screen_width)
  (return-type gint)
)

(function screen_height
  (c-name gdk_screen_height)
  (return-type gint)
)

(function screen_width_mm
  (c-name gdk_screen_width_mm)
  (return-type gint)
)

(function screen_height_mm
  (c-name gdk_screen_height_mm)
  (return-type gint)
)

(function flush
  (c-name gdk_flush)
  (return-type none)
)

(function beep
  (c-name gdk_beep)
  (return-type none)
)

(function visual_get_system
  (c-name gdk_visual_get_system)
  (return-type GdkVisual*)
)

(function visual_get_best
  (c-name gdk_visual_get_best)
  (return-type GdkVisual*)
)

(function visual_get_best_with_depth
  (c-name gdk_visual_get_best_with_depth)
  (return-type GdkVisual*)
  (parameter (type-and-name gint depth))
)

(function visual_get_best_with_type
  (c-name gdk_visual_get_best_with_type)
  (return-type GdkVisual*)
  (parameter (type-and-name GdkVisualType visual_type))
)

(function visual_get_best_with_both
  (c-name gdk_visual_get_best_with_both)
  (return-type GdkVisual*)
  (parameter (type-and-name gint depth))
  (parameter (type-and-name GdkVisualType visual_type))
)

(function gdk_drag_status
  (c-name gdk_drag_status)
  (return-type none)
  (parameter (type-and-name GdkDragContext* context))
  (parameter (type-and-name GdkDragAction action))
  (parameter (type-and-name guint32 time))
)

(method set_icon
  (of-object Window (Gdk))
  (c-name gdk_window_set_icon)
  (return-type none)
  (parameter (type-and-name GdkWindow* icon_window))
  (parameter (type-and-name GdkPixmap* pixmap))
  (parameter (type-and-name GdkBitmap* mask))
)

(method set_icon_name
  (of-object Window (Gdk))
  (c-name gdk_window_set_icon_name)
  (return-type none)
  (parameter (type-and-name const-gchar* name))
)

(function cursor_new
  (c-name gdk_cursor_new)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkCursorType cursor_type))
)

(function cursor_new_from_pixmap
  (c-name gdk_cursor_new_from_pixmap)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkPixmap* source))
  (parameter (type-and-name GdkPixmap* mask))
  (parameter (type-and-name GdkColor* fg))
  (parameter (type-and-name GdkColor* bg))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(function pixmap_new
  (c-name gdk_pixmap_new)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window) (null-ok))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint depth))
)

(function pixmap_create_from_xpm
  (c-name gdk_pixmap_create_from_xpm)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name const-gchar* filename))
)

(function pixmap_colormap_create_from_xpm
  (c-name gdk_pixmap_colormap_create_from_xpm)
  (return-type GdkPixmap*)
  (parameter (type-and-name  GdkWindow* window))
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name const-gchar* filename))
)

(function pixmap_create_from_xpm_d
  (c-name gdk_pixmap_create_from_xpm_d)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name gchar** data))
)

(function pixmap_colormap_create_from_xpm_d
  (c-name gdk_pixmap_colormap_create_from_xpm_d)
  (return-type GdkPixmap*)
  (parameter (type-and-name  GdkWindow* window))
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name gchar** data))
)


(function colormap_new
  (c-name gdk_colormap_new)
  (return-type GdkColormap*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gboolean allocate))
)

(method ref
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_ref)
  (return-type GdkColormap*)
)

(method unref
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_unref)
  (return-type none)
)

(function colormap_get_system
  (c-name gdk_colormap_get_system)
  (return-type GdkColormap*)
)

(function colormap_get_system_size
  (c-name gdk_colormap_get_system_size)
  (return-type gint)
)

(method change
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_change)
  (return-type none)
  (parameter (type-and-name gint ncolors))
)

(method alloc_colors
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_alloc_colors)
  (return-type gint)
  (parameter (type-and-name GdkColor* colors))
  (parameter (type-and-name gint ncolors))
  (parameter (type-and-name gboolean writeable))
  (parameter (type-and-name gboolean best_match))
  (parameter (type-and-name gboolean* success))
)

(method alloc_color
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_alloc_color)
  (return-type gboolean)
  (parameter (type-and-name GdkColor* color))
  (parameter (type-and-name gboolean writeable))
  (parameter (type-and-name gboolean best_match))
)

(method free_colors
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_free_colors)
  (return-type none)
  (parameter (type-and-name GdkColor* colors))
  (parameter (type-and-name gint ncolors))
)

(method get_visual
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_get_visual)
  (return-type GdkVisual*)
)

(method copy
  (of-object Color (Gdk))
  (c-name gdk_color_copy)
  (return-type GdkColor*)
)

(method free
  (of-object Color (Gdk))
  (c-name gdk_color_free)
  (return-type none)
)

(function gdk_color_parse
  (c-name gdk_color_parse)
  (return-type gboolean)
  (parameter (type-and-name const-gchar* spec))
  (parameter (type-and-name GdkColor* color))
)

(method hash
  (of-object Color (Gdk))
  (c-name gdk_color_hash)
  (return-type guint)
  (parameter (type-and-name const-GdkColor* colorb))
)

(method equal
  (of-object Color (Gdk))
  (c-name gdk_color_equal)
  (return-type gboolean)
  (parameter (type-and-name const-GdkColor* colorb))
)

(function font_load
  (c-name gdk_font_load)
  (return-type GdkFont*)
  (parameter (type-and-name const-gchar* font_name))
)

(function fontset_load
  (c-name gdk_fontset_load)
  (return-type GdkFont*)
  (parameter (type-and-name const-gchar* fontset_name))
)

(function draw_point
  (c-name gdk_draw_point)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(function draw_line
  (c-name gdk_draw_line)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x1))
  (parameter (type-and-name gint y1))
  (parameter (type-and-name gint x2))
  (parameter (type-and-name gint y2))
)

(function draw_rectangle
  (c-name gdk_draw_rectangle)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint filled))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function draw_arc
  (c-name gdk_draw_arc)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint filled))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint angle1))
  (parameter (type-and-name gint angle2))
)

(function draw_polygon
  (c-name gdk_draw_polygon)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint filled))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(function draw_string
  (c-name gdk_draw_string)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-gchar* string))
)

(function draw_text
  (c-name gdk_draw_text)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(function draw_text_wc
  (c-name gdk_draw_text_wc)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
)

(function draw_pixmap
  (c-name gdk_draw_pixmap)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkDrawable* src))
  (parameter (type-and-name gint xsrc))
  (parameter (type-and-name gint ysrc))
  (parameter (type-and-name gint xdest))
  (parameter (type-and-name gint ydest))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function draw_image
  (c-name gdk_draw_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkImage* image))
  (parameter (type-and-name gint xsrc))
  (parameter (type-and-name gint ysrc))
  (parameter (type-and-name gint xdest))
  (parameter (type-and-name gint ydest))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function draw_points
  (c-name gdk_draw_points)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(function draw_segments
  (c-name gdk_draw_segments)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkSegment* segs))
  (parameter (type-and-name gint nsegs))
)

(function draw_lines
  (c-name gdk_draw_lines)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(function atom_intern
  (c-name gdk_atom_intern)
  (return-type GdkAtom)
  (parameter (type-and-name const-gchar* atom_name))
  (parameter (type-and-name gint only_if_exists) (default "FALSE"))
)

(method name
  (of-object Atom (Gdk))
  (c-name gdk_atom_name)
  (return-type gchar*)
)

(function threads_enter
  (c-name gdk_threads_enter)
  (return-type none)
)

(function threads_leave
  (c-name gdk_threads_leave)
  (return-type none)
)



;; From /usr/include/gdk/gdkrgb.h

(function rgb_xpixel_from_rgb
  (c-name gdk_rgb_xpixel_from_rgb)
  (return-type gulong)
  (parameter (type-and-name guint32 rgb))
)

(function rgb_gc_set_foreground
  (c-name gdk_rgb_gc_set_foreground)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name guint32 rgb))
)

(function rgb_gc_set_background
  (c-name gdk_rgb_gc_set_background)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name guint32 rgb))
)

(function draw_rgb_image
  (c-name gdk_draw_rgb_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* rgb_buf))
  (parameter (type-and-name gint rowstride))
)

(function draw_rgb_image_dithalign
  (c-name gdk_draw_rgb_image_dithalign)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* rgb_buf))
  (parameter (type-and-name gint rowstride))
  (parameter (type-and-name gint xdith))
  (parameter (type-and-name gint ydith))
)

(function draw_rgb_32_image
  (c-name gdk_draw_rgb_32_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
)

(function draw_gray_image
  (c-name gdk_draw_gray_image)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
)

(function rgb_get_cmap
  (c-name gdk_rgb_get_cmap)
  (return-type GdkColormap*)
)

(function rgb_get_visual
  (c-name gdk_rgb_get_visual)
  (return-type GdkVisual*)
)




