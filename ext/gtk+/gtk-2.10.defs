;; -*- scheme -*-
(include "gtk-2.10-types.defs")
(include "gtk-2.8.defs")

;; From gtkaboutdialog.h



;; From gtkaccelgroup.h



;; From gtkaccellabel.h



;; From gtkaccelmap.h



;; From gtkaccessible.h



;; From gtkactiongroup.h



;; From gtkaction.h

(define-method get_action
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_action")
  (return-type "GtkAction*")
)

(define-method get_accel_closure
  (of-object "GtkAction")
  (c-name "gtk_action_get_accel_closure")
  (return-type "GClosure*")
)



;; From gtkadjustment.h



;; From gtkalignment.h



;; From gtkarrow.h



;; From gtkaspectframe.h



;; From gtkassistant.h

(define-function assistant_get_type
  (c-name "gtk_assistant_get_type")
  (return-type "GType")
)

(define-function assistant_new
  (c-name "gtk_assistant_new")
  (is-constructor-of "GtkAssistant")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
)

(define-method get_current_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_current_page")
  (return-type "gint")
)

(define-method set_current_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_current_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method get_n_pages
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_n_pages")
  (return-type "gint")
)

(define-method get_nth_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "page_num")
  )
)

(define-method prepend_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_prepend_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method append_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_append_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method insert_page
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_insert_page")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "page")
    '("gint" "position")
  )
)

(define-method set_forward_page_func
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_forward_page_func")
  (return-type "none")
  (parameters
    '("GtkAssistantPageFunc" "page_func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_page_type
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_type")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("GtkAssistantPageType" "type")
  )
)

(define-method get_page_type
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_type")
  (return-type "GtkAssistantPageType")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method set_page_title
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_title")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("const-gchar*" "title")
  )
)

(define-method get_page_title
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_title")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method set_page_header_image
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_header_image")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("GdkPixbuf*" "pixbuf" (null-ok) (default "NULL"))
  )
)

(define-method get_page_header_image
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_header_image")
  (return-type "GdkPixbuf*")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method set_page_side_image
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_side_image")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("GdkPixbuf*" "pixbuf" (null-ok) (default "NULL"))
  )
)

(define-method get_page_side_image
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_side_image")
  (return-type "GdkPixbuf*")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method set_page_complete
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_set_page_complete")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
    '("gboolean" "complete")
  )
)

(define-method get_page_complete
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_get_page_complete")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-method add_action_widget
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_add_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method remove_action_widget
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_remove_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method update_buttons_state
  (of-object "GtkAssistant")
  (c-name "gtk_assistant_update_buttons_state")
  (return-type "none")
)

(define-virtual prepare
  (of-object "GtkAssistant")
  (return-type "none")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-virtual apply
  (of-object "GtkAssistant")
  (return-type "none")
)

(define-virtual close
  (of-object "GtkAssistant")
  (return-type "none")
)

(define-virtual cancel
  (of-object "GtkAssistant")
  (return-type "none")
)




;; From gtkbbox.h



;; From gtkbindings.h



;; From gtkbin.h



;; From gtkbox.h



;; From gtkbutton.h

(define-method set_image_position
  (of-object "GtkButton")
  (c-name "gtk_button_set_image_position")
  (return-type "none")
  (parameters
    '("GtkPositionType" "position")
  )
)

(define-method get_image_position
  (of-object "GtkButton")
  (c-name "gtk_button_get_image_position")
  (return-type "GtkPositionType")
)


;; From gtkcalendar.h



;; From gtkcelleditable.h



;; From gtkcelllayout.h



;; From gtkcellrendereraccel.h

(define-function cell_renderer_accel_get_type
  (c-name "gtk_cell_renderer_accel_get_type")
  (return-type "GType")
)

(define-function cell_renderer_accel_new
  (c-name "gtk_cell_renderer_accel_new")
  (is-constructor-of "GtkCellRendererAccel")
  (return-type "GtkCellRenderer*")
)

(define-virtual accel_edited
  (of-object "GtkCellRendererAccel")
  (return-type "none")
  (parameters
    '("const-gchar*" "path_string")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("guint" "hardware_keycode")
  )
)

(define-virtual accel_cleared
  (of-object "GtkCellRendererAccel")
  (return-type "none")
  (parameters
    '("const-gchar*" "path_string")
  )
)



;; From gtkcellrenderercombo.h



;; From gtkcellrenderer.h



;; From gtkcellrendererpixbuf.h



;; From gtkcellrendererprogress.h



;; From gtkcellrendererspin.h

(define-function cell_renderer_spin_get_type
  (c-name "gtk_cell_renderer_spin_get_type")
  (return-type "GType")
)

(define-function cell_renderer_spin_new
  (c-name "gtk_cell_renderer_spin_new")
  (is-constructor-of "GtkCellRendererSpin")
  (return-type "GtkCellRenderer*")
)



;; From gtkcellrenderertext.h



;; From gtkcellrenderertoggle.h



;; From gtkcellview.h



;; From gtkcheckbutton.h



;; From gtkcheckmenuitem.h



;; From gtkclipboard.h

(define-method request_rich_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_rich_text")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer")
    '("GtkClipboardRichTextReceivedFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method wait_for_rich_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_rich_text")
  (return-type "guint8*")
  (parameters
    '("GtkTextBuffer*" "buffer")
    '("GdkAtom*" "format")
    '("gsize*" "length")
  )
)

(define-method wait_is_rich_text_available
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_is_rich_text_available")
  (return-type "gboolean")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)



;; From gtkclist.h



;; From gtkcolorbutton.h



;; From gtkcolorseldialog.h



;; From gtkcolorsel.h



;; From gtkcomboboxentry.h



;; From gtkcombobox.h

(define-method get_title
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_title")
  (return-type "const-gchar*")
)

(define-method set_title
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)



;; From gtkcombo.h



;; From gtkcontainer.h



;; From gtkctree.h



;; From gtkcurve.h



;; From gtkdebug.h



;; From gtkdialog.h



;; From gtkdnd.h

(define-method drag_dest_set_track_motion
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_set_track_motion")
  (return-type "none")
  (parameters
    '("gboolean" "track_motion")
  )
)

(define-method drag_dest_get_track_motion
  (of-object "GtkWidget")
  (c-name "gtk_drag_dest_get_track_motion")
  (return-type "gboolean")
)



;; From gtkdrawingarea.h



;; From gtkeditable.h



;; From gtkentrycompletion.h



;; From gtkentry.h

(define-method set_inner_border
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_inner_border")
  (return-type "none")
  (parameters
    '("const-GtkBorder*" "border" (null-ok))
  )
)

(define-method get_inner_border
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_inner_border")
  (return-type "const-GtkBorder*")
)



;; From gtkenums.h



;; From gtkeventbox.h



;; From gtkexpander.h



;; From gtkfilechooserbutton.h

(define-method get_focus_on_click
  (of-object "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_get_focus_on_click")
  (return-type "gboolean")
)

(define-method set_focus_on_click
  (of-object "GtkFileChooserButton")
  (c-name "gtk_file_chooser_button_set_focus_on_click")
  (return-type "none")
  (parameters
    '("gboolean" "focus_on_click")
  )
)



;; From gtkfilechooserdialog.h



;; From gtkfilechooser.h



;; From gtkfilechooserwidget.h



;; From gtkfilefilter.h



;; From gtkfilesel.h



;; From gtkfilesystem.h

(define-virtual get_info
  (of-object "GtkFileSystem")
  (return-type "GtkFileSystemHandle*")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GtkFileInfoType" "types")
    '("GtkFileSystemGetInfoCallback" "callback")
    '("gpointer" "data")
  )
)

(define-virtual cancel_operation
  (of-object "GtkFileSystem")
  (return-type "none")
)



;; From gtkfixed.h



;; From gtkfontbutton.h



;; From gtkfontsel.h



;; From gtkframe.h



;; From gtkgamma.h



;; From gtkgc.h



;; From gtk.h



;; From gtkhandlebox.h



;; From gtkhbbox.h



;; From gtkhbox.h



;; From gtkhpaned.h



;; From gtkhruler.h



;; From gtkhscale.h



;; From gtkhscrollbar.h



;; From gtkhseparator.h



;; From gtkiconfactory.h



;; From gtkicontheme.h



;; From gtkiconview.h



;; From gtkimage.h



;; From gtkimagemenuitem.h



;; From gtkimcontext.h



;; From gtkimcontextsimple.h



;; From gtkimmodule.h



;; From gtkimmulticontext.h



;; From gtkinputdialog.h



;; From gtkinvisible.h



;; From gtkitemfactory.h



;; From gtkitem.h



;; From gtklabel.h

(define-method set_line_wrap_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_set_line_wrap_mode")
  (return-type "none")
  (parameters
    '("PangoWrapMode" "wrap_mode")
  )
)

(define-method get_line_wrap_mode
  (of-object "GtkLabel")
  (c-name "gtk_label_get_line_wrap_mode")
  (return-type "PangoWrapMode")
)



;; From gtklayout.h



;; From gtklinkbutton.h

(define-function link_button_get_type
  (c-name "gtk_link_button_get_type")
  (return-type "GType")
)

(define-function link_button_new
  (c-name "gtk_link_button_new")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-function link_button_new_with_label
  (c-name "gtk_link_button_new_with_label")
  (is-constructor-of "GtkLinkButton")
  (caller-owns-return #t)
  (return-type "GtkWidget*")
  (parameters
    '("gchar*" "uri")
    '("gchar*" "label" (null-ok) (default "NULL"))
  )
)


(define-method get_uri
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_get_uri")
  (return-type "const-gchar*")
)

(define-method set_uri
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_set_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method set_uri_hook
  (of-object "GtkLinkButton")
  (c-name "gtk_link_button_set_uri_hook")
  (return-type "GtkLinkButtonUriFunc")
  (parameters
    '("GtkLinkButtonUriFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
  (static #t)
)



;; From gtklist.h



;; From gtklistitem.h



;; From gtkliststore.h



;; From gtkmain.h



;; From gtkmarshal.h



;; From gtkmenubar.h



;; From gtkmenu.h



;; From gtkmenuitem.h



;; From gtkmenushell.h



;; From gtkmenutoolbutton.h



;; From gtkmessagedialog.h

(define-method set_image
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_set_image")
  (return-type "none")
  (parameters
    '("GtkWidget*" "image")
  )
)


;; From gtkmisc.h



;; From gtkmodules.h



;; From gtknotebook.h

(define-method set_window_creation_hook
  (c-name "gtk_notebook_set_window_creation_hook")
  (of-object "GtkNotebook")
  (return-type "none")
  (parameters
    '("GtkNotebookWindowCreationFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
  (static #t)
)

(define-method set_group_id
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_group_id")
  (return-type "none")
  (parameters
    '("gint" "group_id")
  )
)

(define-method get_group_id
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_group_id")
  (return-type "gint")
)

(define-method get_tab_reorderable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_reorderable")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_reorderable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_reorderable")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "reorderable")
  )
)

(define-method get_tab_detachable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_detachable")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_detachable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_detachable")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "detachable")
  )
)

(define-virtual reorder_tab
  (of-object "GtkNotebook")
  (return-type "none")
  (parameters
    '("GtkDirectionType" "direction")
    '("gboolean" "move_to_last")
  )
)

(define-virtual insert_page
  (of-object "GtkNotebook")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
    '("gint" "position")
  )
)



;; From gtkobject.h



;; From gtkoldeditable.h



;; From gtkoptionmenu.h



;; From gtkpagesetup.h

(define-function page_setup_get_type
  (c-name "gtk_page_setup_get_type")
  (return-type "GType")
)

(define-function page_setup_new
  (c-name "gtk_page_setup_new")
  (is-constructor-of "GtkPageSetup")
  (return-type "GtkPageSetup*")
)

(define-method copy
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_copy")
  (return-type "GtkPageSetup*")
)

(define-method get_orientation
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_orientation")
  (return-type "GtkPageOrientation")
)

(define-method set_orientation
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_orientation")
  (return-type "none")
  (parameters
    '("GtkPageOrientation" "orientation")
  )
)

(define-method get_paper_size
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_paper_size")
  (return-type "GtkPaperSize*")
)

(define-method set_paper_size
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_paper_size")
  (return-type "none")
  (parameters
    '("GtkPaperSize*" "size")
  )
)

(define-method get_top_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_top_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_top_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_top_margin")
  (return-type "none")
  (parameters
    '("gdouble" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method get_bottom_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_bottom_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_bottom_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_bottom_margin")
  (return-type "none")
  (parameters
    '("gdouble" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method get_left_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_left_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_left_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_left_margin")
  (return-type "none")
  (parameters
    '("gdouble" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method get_right_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_right_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_right_margin
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_right_margin")
  (return-type "none")
  (parameters
    '("gdouble" "margin")
    '("GtkUnit" "unit")
  )
)

(define-method set_paper_size_and_default_margins
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_set_paper_size_and_default_margins")
  (return-type "none")
  (parameters
    '("GtkPaperSize*" "size")
  )
)

(define-method get_paper_width
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_paper_width")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_paper_height
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_paper_height")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_page_width
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_page_width")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_page_height
  (of-object "GtkPageSetup")
  (c-name "gtk_page_setup_get_page_height")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)



;; From gtkpaned.h



;; From gtkpapersize.h

(define-function paper_size_get_type
  (c-name "gtk_paper_size_get_type")
  (return-type "GType")
)

(define-function paper_size_new
  (c-name "gtk_paper_size_new")
  (is-constructor-of "GtkPaperSize")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-gchar*" "name" (null-ok) (default "NULL"))
  )
)

(define-function paper_size_new_from_ppd
  (c-name "gtk_paper_size_new_from_ppd")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-gchar*" "ppd_name")
    '("const-gchar*" "ppd_display_name")
    '("gdouble" "width")
    '("gdouble" "height")
  )
)

(define-function paper_size_new_custom
  (c-name "gtk_paper_size_new_custom")
  (return-type "GtkPaperSize*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "display_name")
    '("gdouble" "width")
    '("gdouble" "height")
    '("GtkUnit" "unit")
  )
)

(define-method copy
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_copy")
  (return-type "GtkPaperSize*")
)

(define-method free
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_free")
  (return-type "none")
)

(define-method is_equal
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_is_equal")
  (return-type "gboolean")
  (parameters
    '("GtkPaperSize*" "size2")
  )
)

(define-method get_name
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_name")
  (return-type "const-gchar*")
)

(define-method get_display_name
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_display_name")
  (return-type "const-gchar*")
)

(define-method get_ppd_name
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_ppd_name")
  (return-type "const-gchar*")
)

(define-method get_width
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_width")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_height
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_height")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method is_custom
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_is_custom")
  (return-type "gboolean")
)

(define-method set_size
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_set_size")
  (return-type "none")
  (parameters
    '("gdouble" "width")
    '("gdouble" "height")
    '("GtkUnit" "unit")
  )
)

(define-method get_default_top_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_top_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_default_bottom_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_bottom_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_default_left_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_left_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method get_default_right_margin
  (of-object "GtkPaperSize")
  (c-name "gtk_paper_size_get_default_right_margin")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-function paper_size_get_default
  (c-name "gtk_paper_size_get_default")
  (return-type "const-gchar*")
)



;; From gtkpixmap.h



;; From gtkplug.h



;; From gtkpreview.h



;; From gtkprintcontext.h

(define-function print_context_get_type
  (c-name "gtk_print_context_get_type")
  (return-type "GType")
)

(define-method get_cairo_context
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_cairo_context")
  (return-type "cairo_t*")
)

(define-method get_page_setup
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_page_setup")
  (return-type "GtkPageSetup*")
)

(define-method get_width
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_width")
  (return-type "gdouble")
)

(define-method get_height
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_height")
  (return-type "gdouble")
)

(define-method get_dpi_x
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_dpi_x")
  (return-type "gdouble")
)

(define-method get_dpi_y
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_dpi_y")
  (return-type "gdouble")
)

(define-method get_pango_fontmap
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_get_pango_fontmap")
  (return-type "PangoFontMap*")
)

(define-method create_pango_context
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_create_pango_context")
  (return-type "PangoContext*")
)

(define-method create_pango_layout
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_create_pango_layout")
  (return-type "PangoLayout*")
)

(define-method set_cairo_context
  (of-object "GtkPrintContext")
  (c-name "gtk_print_context_set_cairo_context")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("double" "dpi_x")
    '("double" "dpi_y")
  )
)



;; From gtkprintoperation.h

(define-function print_error_quark
  (c-name "gtk_print_error_quark")
  (return-type "GQuark")
)

(define-function print_operation_get_type
  (c-name "gtk_print_operation_get_type")
  (return-type "GType")
)

(define-function print_operation_new
  (c-name "gtk_print_operation_new")
  (is-constructor-of "GtkPrintOperation")
  (return-type "GtkPrintOperation*")
)

(define-method set_default_page_setup
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_default_page_setup")
  (return-type "none")
  (parameters
    '("GtkPageSetup*" "default_page_setup" (null-ok) (default "NULL"))
  )
)

(define-method get_default_page_setup
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_default_page_setup")
  (return-type "GtkPageSetup*")
)

(define-method set_print_settings
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_print_settings")
  (return-type "none")
  (parameters
    '("GtkPrintSettings*" "print_settings" (null-ok) (default "NULL"))
  )
)

(define-method get_print_settings
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_print_settings")
  (return-type "GtkPrintSettings*")
)

(define-method set_job_name
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_job_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "job_name")
  )
)

(define-method set_n_pages
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_n_pages")
  (return-type "none")
  (parameters
    '("gint" "n_pages")
  )
)

(define-method set_current_page
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_current_page")
  (return-type "none")
  (parameters
    '("gint" "current_page")
  )
)

(define-method set_use_full_page
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_use_full_page")
  (return-type "none")
  (parameters
    '("gboolean" "full_page")
  )
)

(define-method set_unit
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_unit")
  (return-type "none")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_export_filename
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_export_filename")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method set_track_print_status
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_track_print_status")
  (return-type "none")
  (parameters
    '("gboolean" "track_status")
  )
)

(define-method set_show_progress
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_show_progress")
  (return-type "none")
  (parameters
    '("gboolean" "show_progress")
  )
)

(define-method set_allow_async
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_allow_async")
  (return-type "none")
  (parameters
    '("gboolean" "allow_async")
  )
)

(define-method set_custom_tab_label
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_set_custom_tab_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method run
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_run")
  (return-type "GtkPrintOperationResult")
  (parameters
    '("GtkPrintOperationAction" "action")
    '("GtkWindow*" "parent" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
)

(define-method get_error
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_error")
  (return-type "none")
  (parameters
    '("GError**" "error")
  )
)

(define-method get_status
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_status")
  (return-type "GtkPrintStatus")
)

(define-method get_status_string
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_get_status_string")
  (return-type "const-gchar*")
)

(define-method is_finished
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_is_finished")
  (return-type "gboolean")
)

(define-method cancel
  (of-object "GtkPrintOperation")
  (c-name "gtk_print_operation_cancel")
  (return-type "none")
)

(define-function print_run_page_setup_dialog
  (c-name "gtk_print_run_page_setup_dialog")
  (return-type "GtkPageSetup*")
  (parameters
    '("GtkWindow*" "parent" (null-ok))
    '("GtkPageSetup*" "page_setup" (null-ok))
    '("GtkPrintSettings*" "settings")
  )
)

(define-function print_run_page_setup_dialog_async
  (c-name "gtk_print_run_page_setup_dialog_async")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkPageSetup*" "page_setup")
    '("GtkPrintSettings*" "settings")
    '("GtkPageSetupDoneFunc" "done_cb")
    '("gpointer" "data")
  )
)

(define-virtual done
  (of-object "GtkPrintOperation")
  (return-type "none")
  (parameters
    '("GtkPrintOperationResult" "result")
  )
)

(define-virtual begin_print
  (of-object "GtkPrintOperation")
  (return-type "none")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-virtual paginate
  (of-object "GtkPrintOperation")
  (return-type "gboolean")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-virtual request_page_setup
  (of-object "GtkPrintOperation")
  (return-type "none")
  (parameters
    '("GtkPrintContext*" "context")
    '("gint" "page_nr")
    '("GtkPageSetup*" "setup")
  )
)

(define-virtual draw_page
  (of-object "GtkPrintOperation")
  (return-type "none")
  (parameters
    '("GtkPrintContext*" "context")
    '("gint" "page_nr")
  )
)

(define-virtual end_print
  (of-object "GtkPrintOperation")
  (return-type "none")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-virtual status_changed
  (of-object "GtkPrintOperation")
  (return-type "none")
)

(define-virtual create_custom_widget
  (of-object "GtkPrintOperation")
  (return-type "GtkWidget*")
)

(define-virtual custom_widget_apply
  (of-object "GtkPrintOperation")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-virtual preview
  (of-object "GtkPrintOperation")
  (return-type "gboolean")
  (parameters
    '("GtkPrintOperationPreview*" "preview")
    '("GtkPrintContext*" "context")
    '("GtkWindow*" "parent")
  )
)



;; From gtkprintoperationpreview.h

(define-function print_operation_preview_get_type
  (c-name "gtk_print_operation_preview_get_type")
  (return-type "GType")
)

(define-method render_page
  (of-object "GtkPrintOperationPreview")
  (c-name "gtk_print_operation_preview_render_page")
  (return-type "none")
  (parameters
    '("gint" "page_nr")
  )
)

(define-method end_preview
  (of-object "GtkPrintOperationPreview")
  (c-name "gtk_print_operation_preview_end_preview")
  (return-type "none")
)

(define-method is_selected
  (of-object "GtkPrintOperationPreview")
  (c-name "gtk_print_operation_preview_is_selected")
  (return-type "gboolean")
  (parameters
    '("gint" "page_nr")
  )
)

(define-virtual ready
  (of-object "GtkPrintOperationPreview")
  (return-type "none")
  (parameters
    '("GtkPrintContext*" "context")
  )
)
(define-virtual got_page_size
  (of-object "GtkPrintOperationPreview")
  (return-type "none")
  (parameters
    '("GtkPrintContext*" "context")
    '("GtkPageSetup*" "page_setup")
  )
)
(define-virtual render_page
  (of-object "GtkPrintOperationPreview")
  (return-type "none")
  (parameters
    '("gint" "page_nr")
  )
)
(define-virtual is_selected
  (of-object "GtkPrintOperationPreview")
  (return-type "gboolean")
  (parameters
    '("gint" "page_nr")
  )
)
(define-virtual end_preview
  (of-object "GtkPrintOperationPreview")
  (return-type "none")
)


;; From gtkprintsettings.h

(define-function print_settings_get_type
  (c-name "gtk_print_settings_get_type")
  (return-type "GType")
)

(define-function print_settings_new
  (c-name "gtk_print_settings_new")
  (is-constructor-of "GtkPrintSettings")
  (return-type "GtkPrintSettings*")
)

(define-method copy
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_copy")
  (return-type "GtkPrintSettings*")
)

(define-method has_key
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_has_key")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method set
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("const-gchar*" "value" (null-ok))
  )
)

(define-method unset
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_unset")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method foreach
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_foreach")
  (return-type "none")
  (parameters
    '("GtkPrintSettingsFunc" "func")
    '("gpointer" "user_data" (null-ok) (default "NULL"))
  )
)

(define-method get_bool
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_bool")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method set_bool
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_bool")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gboolean" "value")
  )
)

(define-method get_double
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_double")
  (return-type "gdouble")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get_double_with_default
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_double_with_default")
  (return-type "gdouble")
  (parameters
    '("const-gchar*" "key")
    '("gdouble" "def")
  )
)

(define-method set_double
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_double")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gdouble" "value")
  )
)

(define-method get_length
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_length")
  (return-type "gdouble")
  (parameters
    '("const-gchar*" "key")
    '("GtkUnit" "unit")
  )
)

(define-method set_length
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_length")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gdouble" "value")
    '("GtkUnit" "unit")
  )
)

(define-method get_int
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_int")
  (return-type "gint")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get_int_with_default
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_int_with_default")
  (return-type "gint")
  (parameters
    '("const-gchar*" "key")
    '("gint" "def")
  )
)

(define-method set_int
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_int")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gint" "value")
  )
)

(define-method get_printer
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_printer")
  (return-type "const-gchar*")
)

(define-method set_printer
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_printer")
  (return-type "none")
  (parameters
    '("const-gchar*" "printer")
  )
)

(define-method get_orientation
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_orientation")
  (return-type "GtkPageOrientation")
)

(define-method set_orientation
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_orientation")
  (return-type "none")
  (parameters
    '("GtkPageOrientation" "orientation")
  )
)

(define-method get_paper_size
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_paper_size")
  (return-type "GtkPaperSize*")
)

(define-method set_paper_size
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_paper_size")
  (return-type "none")
  (parameters
    '("GtkPaperSize*" "paper_size")
  )
)

(define-method get_paper_width
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_paper_width")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_paper_width
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_paper_width")
  (return-type "none")
  (parameters
    '("gdouble" "width")
    '("GtkUnit" "unit")
  )
)

(define-method get_paper_height
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_paper_height")
  (return-type "gdouble")
  (parameters
    '("GtkUnit" "unit")
  )
)

(define-method set_paper_height
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_paper_height")
  (return-type "none")
  (parameters
    '("gdouble" "height")
    '("GtkUnit" "unit")
  )
)

(define-method get_use_color
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_use_color")
  (return-type "gboolean")
)

(define-method set_use_color
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_use_color")
  (return-type "none")
  (parameters
    '("gboolean" "use_color")
  )
)

(define-method get_collate
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_collate")
  (return-type "gboolean")
)

(define-method set_collate
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_collate")
  (return-type "none")
  (parameters
    '("gboolean" "collate")
  )
)

(define-method get_reverse
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_reverse")
  (return-type "gboolean")
)

(define-method set_reverse
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_reverse")
  (return-type "none")
  (parameters
    '("gboolean" "reverse")
  )
)

(define-method get_duplex
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_duplex")
  (return-type "GtkPrintDuplex")
)

(define-method set_duplex
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_duplex")
  (return-type "none")
  (parameters
    '("GtkPrintDuplex" "duplex")
  )
)

(define-method get_quality
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_quality")
  (return-type "GtkPrintQuality")
)

(define-method set_quality
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_quality")
  (return-type "none")
  (parameters
    '("GtkPrintQuality" "quality")
  )
)

(define-method get_n_copies
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_n_copies")
  (return-type "gint")
)

(define-method set_n_copies
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_n_copies")
  (return-type "none")
  (parameters
    '("gint" "num_copies")
  )
)

(define-method get_number_up
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_number_up")
  (return-type "gint")
)

(define-method set_number_up
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_number_up")
  (return-type "none")
  (parameters
    '("gint" "number_up")
  )
)

(define-method get_resolution
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_resolution")
  (return-type "gint")
)

(define-method set_resolution
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_resolution")
  (return-type "none")
  (parameters
    '("gint" "resolution")
  )
)

(define-method get_scale
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_scale")
  (return-type "gdouble")
)

(define-method set_scale
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_scale")
  (return-type "none")
  (parameters
    '("gdouble" "scale")
  )
)

(define-method get_print_pages
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_print_pages")
  (return-type "GtkPrintPages")
)

(define-method set_print_pages
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_print_pages")
  (return-type "none")
  (parameters
    '("GtkPrintPages" "pages")
  )
)

(define-method get_page_ranges
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_page_ranges")
  (return-type "GtkPageRange*")
  (parameters
    '("gint*" "num_ranges")
  )
)

(define-method set_page_ranges
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_page_ranges")
  (return-type "none")
  (parameters
    '("GtkPageRange*" "page_ranges")
    '("gint" "num_ranges")
  )
)

(define-method get_page_set
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_page_set")
  (return-type "GtkPageSet")
)

(define-method set_page_set
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_page_set")
  (return-type "none")
  (parameters
    '("GtkPageSet" "page_set")
  )
)

(define-method get_default_source
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_default_source")
  (return-type "const-gchar*")
)

(define-method set_default_source
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_default_source")
  (return-type "none")
  (parameters
    '("const-gchar*" "default_source")
  )
)

(define-method get_media_type
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_media_type")
  (return-type "const-gchar*")
)

(define-method set_media_type
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_media_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "media_type")
  )
)

(define-method get_dither
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_dither")
  (return-type "const-gchar*")
)

(define-method set_dither
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_dither")
  (return-type "none")
  (parameters
    '("const-gchar*" "dither")
  )
)

(define-method get_finishings
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_finishings")
  (return-type "const-gchar*")
)

(define-method set_finishings
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_finishings")
  (return-type "none")
  (parameters
    '("const-gchar*" "finishings")
  )
)

(define-method get_output_bin
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_get_output_bin")
  (return-type "const-gchar*")
)

(define-method set_output_bin
  (of-object "GtkPrintSettings")
  (c-name "gtk_print_settings_set_output_bin")
  (return-type "none")
  (parameters
    '("const-gchar*" "output_bin")
  )
)



;; From gtkprivate.h



;; From gtkprogressbar.h



;; From gtkprogress.h



;; From gtkradioaction.h

(define-method set_current_value
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_set_current_value")
  (return-type "none")
  (parameters
    '("gint" "current_value")
  )
)



;; From gtkradiobutton.h



;; From gtkradiomenuitem.h



;; From gtkradiotoolbutton.h



;; From gtkrange.h

(define-method set_lower_stepper_sensitivity
  (of-object "GtkRange")
  (c-name "gtk_range_set_lower_stepper_sensitivity")
  (return-type "none")
  (parameters
    '("GtkSensitivityType" "sensitivity")
  )
)

(define-method get_lower_stepper_sensitivity
  (of-object "GtkRange")
  (c-name "gtk_range_get_lower_stepper_sensitivity")
  (return-type "GtkSensitivityType")
)

(define-method set_upper_stepper_sensitivity
  (of-object "GtkRange")
  (c-name "gtk_range_set_upper_stepper_sensitivity")
  (return-type "none")
  (parameters
    '("GtkSensitivityType" "sensitivity")
  )
)

(define-method get_upper_stepper_sensitivity
  (of-object "GtkRange")
  (c-name "gtk_range_get_upper_stepper_sensitivity")
  (return-type "GtkSensitivityType")
)



;; From gtkrc.h



;; From gtkrecentchooserdialog.h

(define-function recent_chooser_dialog_get_type
  (c-name "gtk_recent_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function recent_chooser_dialog_new
  (c-name "gtk_recent_chooser_dialog_new")
  (is-constructor-of "GtkRecentChooserDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("GtkWindow*" "parent")
    '("const-gchar*" "first_button_text")
  )
  (varargs #t)
)

(define-function recent_chooser_dialog_new_for_manager
  (c-name "gtk_recent_chooser_dialog_new_for_manager")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("GtkWindow*" "parent")
    '("GtkRecentManager*" "manager")
    '("const-gchar*" "first_button_text")
  )
  (varargs #t)
)



;; From gtkrecentchooser.h

(define-function recent_chooser_error_quark
  (c-name "gtk_recent_chooser_error_quark")
  (return-type "GQuark")
)

(define-function recent_chooser_get_type
  (c-name "gtk_recent_chooser_get_type")
  (return-type "GType")
)

(define-method set_show_private
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_show_private")
  (return-type "none")
  (parameters
    '("gboolean" "show_private")
  )
)

(define-method get_show_private
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_show_private")
  (return-type "gboolean")
)

(define-method set_show_not_found
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_show_not_found")
  (return-type "none")
  (parameters
    '("gboolean" "show_not_found")
  )
)

(define-method get_show_not_found
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_show_not_found")
  (return-type "gboolean")
)

(define-method set_select_multiple
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_select_multiple")
  (return-type "none")
  (parameters
    '("gboolean" "select_multiple")
  )
)

(define-method get_select_multiple
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_select_multiple")
  (return-type "gboolean")
)

(define-method set_limit
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_limit")
  (return-type "none")
  (parameters
    '("gint" "limit")
  )
)

(define-method get_limit
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_limit")
  (return-type "gint")
)

(define-method set_local_only
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_local_only")
  (return-type "none")
  (parameters
    '("gboolean" "local_only")
  )
)

(define-method get_local_only
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_local_only")
  (return-type "gboolean")
)

(define-method set_show_tips
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_show_tips")
  (return-type "none")
  (parameters
    '("gboolean" "show_tips")
  )
)

(define-method get_show_tips
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_show_tips")
  (return-type "gboolean")
)

(define-method set_show_numbers
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_show_numbers")
  (return-type "none")
  (parameters
    '("gboolean" "show_numbers")
  )
)

(define-method get_show_numbers
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_show_numbers")
  (return-type "gboolean")
)

(define-method set_show_icons
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_show_icons")
  (return-type "none")
  (parameters
    '("gboolean" "show_icons")
  )
)

(define-method get_show_icons
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_show_icons")
  (return-type "gboolean")
)

(define-method set_sort_type
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_sort_type")
  (return-type "none")
  (parameters
    '("GtkRecentSortType" "sort_type")
  )
)

(define-method get_sort_type
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_sort_type")
  (return-type "GtkRecentSortType")
)

(define-method set_sort_func
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_sort_func")
  (return-type "none")
  (parameters
    '("GtkRecentSortFunc" "sort_func")
    '("gpointer" "sort_data")
    '("GDestroyNotify" "data_destroy")
  )
)

(define-method set_current_uri
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_current_uri")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-method get_current_uri
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_current_uri")
  (return-type "gchar*")
)

(define-method get_current_item
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_current_item")
  (return-type "GtkRecentInfo*")
)

(define-method select_uri
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_select_uri")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-method unselect_uri
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_unselect_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method select_all
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_unselect_all")
  (return-type "none")
)

(define-method get_items
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_items")
  (return-type "GList*")
)

(define-method get_uris
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_uris")
  (return-type "gchar**")
  (parameters
    '("gsize*" "length")
  )
)

(define-method add_filter
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_add_filter")
  (return-type "none")
  (parameters
    '("GtkRecentFilter*" "filter")
  )
)

(define-method remove_filter
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_remove_filter")
  (return-type "none")
  (parameters
    '("GtkRecentFilter*" "filter")
  )
)

(define-method list_filters
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_list_filters")
  (return-type "GSList*")
)

(define-method set_filter
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_set_filter")
  (return-type "none")
  (parameters
    '("GtkRecentFilter*" "filter")
  )
)

(define-method get_filter
  (of-object "GtkRecentChooser")
  (c-name "gtk_recent_chooser_get_filter")
  (return-type "GtkRecentFilter*")
)

(define-virtual set_current_uri
  (of-object "GtkRecentChooser")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)
(define-virtual get_current_uri
  (of-object "GtkRecentChooser")
  (return-type "gchar*")
)
(define-virtual select_uri
  (of-object "GtkRecentChooser")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)
(define-virtual unselect_uri
  (of-object "GtkRecentChooser")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)
(define-virtual select_all
  (of-object "GtkRecentChooser")
  (return-type "none")
)
(define-virtual unselect_all
  (of-object "GtkRecentChooser")
  (return-type "none")
)
(define-virtual get_items
  (of-object "GtkRecentChooser")
  (return-type "GList*")
)
(define-virtual get_recent_manager
  (of-object "GtkRecentChooser")
  (return-type "GtkRecentManager*")
)
(define-virtual add_filter
  (of-object "GtkRecentChooser")
  (return-type "none")
  (parameters
    '("GtkRecentFilter*" "filter")
  )
)
(define-virtual remove_filter
  (of-object "GtkRecentChooser")
  (return-type "none")
  (parameters
    '("GtkRecentFilter*" "filter")
  )
)
(define-virtual list_filters
  (of-object "GtkRecentChooser")
  (return-type "GSList*")
)
(define-virtual set_sort_func
  (of-object "GtkRecentChooser")
  (return-type "none")
  (parameters
    '("GtkRecentSortFunc" "sort_func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)
(define-virtual item_activated
  (of-object "GtkRecentChooser")
  (return-type "none")
)
(define-virtual selection_changed
  (of-object "GtkRecentChooser")
  (return-type "none")
)


;; From gtkrecentchoosermenu.h

(define-function recent_chooser_menu_get_type
  (c-name "gtk_recent_chooser_menu_get_type")
  (return-type "GType")
)

(define-function recent_chooser_menu_new
  (c-name "gtk_recent_chooser_menu_new")
  (return-type "GtkWidget*")
)

(define-function recent_chooser_menu_new_for_manager
  (c-name "gtk_recent_chooser_menu_new_for_manager")
  (is-constructor-of "GtkRecentChooserMenu")
  (return-type "GtkWidget*")
  (properties
    '("recent-manager" (argname "manager") (optional))
  )
)

(define-method get_show_numbers
  (of-object "GtkRecentChooserMenu")
  (c-name "gtk_recent_chooser_menu_get_show_numbers")
  (return-type "gboolean")
)

(define-method set_show_numbers
  (of-object "GtkRecentChooserMenu")
  (c-name "gtk_recent_chooser_menu_set_show_numbers")
  (return-type "none")
  (parameters
    '("gboolean" "show_numbers")
  )
)



;; From gtkrecentchooserwidget.h

(define-function recent_chooser_widget_get_type
  (c-name "gtk_recent_chooser_widget_get_type")
  (return-type "GType")
)

(define-function recent_chooser_widget_new
  (c-name "gtk_recent_chooser_widget_new")
  (return-type "GtkWidget*")
)

(define-function recent_chooser_widget_new_for_manager
  (c-name "gtk_recent_chooser_widget_new_for_manager")
  (is-constructor-of "GtkRecentChooserWidget")
  (return-type "GtkWidget*")
  (properties
    '("recent-manager" (argname "manager") (optional))
  )
)



;; From gtkrecentfilter.h

(define-function recent_filter_get_type
  (c-name "gtk_recent_filter_get_type")
  (return-type "GType")
)

(define-function recent_filter_new
  (c-name "gtk_recent_filter_new")
  (is-constructor-of "GtkRecentFilter")
  (return-type "GtkRecentFilter*")
)

(define-method set_name
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_get_name")
  (return-type "const-gchar*")
)

(define-method add_mime_type
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_mime_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "mime_type")
  )
)

(define-method add_pattern
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_pattern")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern")
  )
)

(define-method add_pixbuf_formats
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_pixbuf_formats")
  (return-type "none")
)

(define-method add_application
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_application")
  (return-type "none")
  (parameters
    '("const-gchar*" "application")
  )
)

(define-method add_group
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_group")
  (return-type "none")
  (parameters
    '("const-gchar*" "group")
  )
)

(define-method add_age
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_age")
  (return-type "none")
  (parameters
    '("gint" "days")
  )
)

(define-method add_custom
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_add_custom")
  (return-type "none")
  (parameters
    '("GtkRecentFilterFlags" "needed")
    '("GtkRecentFilterFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "data_destroy")
  )
)

(define-method get_needed
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_get_needed")
  (return-type "GtkRecentFilterFlags")
)

(define-method filter
  (of-object "GtkRecentFilter")
  (c-name "gtk_recent_filter_filter")
  (return-type "gboolean")
  (parameters
    '("const-GtkRecentFilterInfo*" "filter_info")
  )
)



;; From gtkrecentmanager.h

(define-function recent_manager_error_quark
  (c-name "gtk_recent_manager_error_quark")
  (return-type "GQuark")
)

(define-function recent_manager_get_type
  (c-name "gtk_recent_manager_get_type")
  (return-type "GType")
)

(define-function recent_manager_new
  (c-name "gtk_recent_manager_new")
  (caller-owns-return #t)
  (is-constructor-of "GtkRecentManager")
  (return-type "GtkRecentManager*")
)

(define-method get_default
  (of-object "GtkRecentManager")
  (caller-owns-return #t)
  (c-name "gtk_recent_manager_get_default")
  (return-type "GtkRecentManager*")
  (static #t)
)

(define-method get_for_screen
  (of-object "GtkRecentManager")
  (caller-owns-return #t)
  (c-name "gtk_recent_manager_get_for_screen")
  (return-type "GtkRecentManager*")
  (parameters
    '("GdkScreen*" "screen")
  )
  (static #t)
)

(define-method set_screen
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method add_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_add_item")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method add_full
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_add_full")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("const-GtkRecentData*" "recent_data")
  )
)

(define-method remove_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_remove_item")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-method lookup_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_lookup_item")
  (return-type "GtkRecentInfo*")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-method has_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_has_item")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method move_item
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_move_item")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("const-gchar*" "new_uri")
    '("GError**" "error")
  )
)

(define-method set_limit
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_set_limit")
  (return-type "none")
  (parameters
    '("gint" "limit")
  )
)

(define-method get_limit
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_get_limit")
  (return-type "gint")
)

(define-method get_items
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_get_items")
  (return-type "GList*")
)

(define-method purge_items
  (of-object "GtkRecentManager")
  (c-name "gtk_recent_manager_purge_items")
  (return-type "gint")
  (parameters
    '("GError**" "error")
  )
)

(define-function recent_info_get_type
  (c-name "gtk_recent_info_get_type")
  (return-type "GType")
)

(define-method ref
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_ref")
  (return-type "GtkRecentInfo*")
)

(define-method unref
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_unref")
  (return-type "none")
)

(define-method get_uri
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_uri")
  (return-type "const-gchar*")
)

(define-method get_display_name
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_display_name")
  (return-type "const-gchar*")
)

(define-method get_description
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_description")
  (return-type "const-gchar*")
)

(define-method get_mime_type
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_mime_type")
  (return-type "const-gchar*")
)

(define-method get_added
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_added")
  (return-type "time_t")
)

(define-method get_modified
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_modified")
  (return-type "time_t")
)

(define-method get_visited
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_visited")
  (return-type "time_t")
)

(define-method get_private_hint
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_private_hint")
  (return-type "gboolean")
)

(define-method get_application_info
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_application_info")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "app_name")
    '("gchar**" "app_exec")
    '("guint*" "count")
    '("time_t*" "time_")
  )
)

(define-method get_applications
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_applications")
  (return-type "gchar**")
  (parameters
    '("gsize*" "length")
  )
)

(define-method last_application
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_last_application")
  (return-type "gchar*")
)

(define-method has_application
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_has_application")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "app_name")
  )
)

(define-method get_groups
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_groups")
  (return-type "gchar**")
  (parameters
    '("gsize*" "length")
  )
)

(define-method has_group
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_has_group")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "group_name")
  )
)

(define-method get_icon
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("gint" "size")
  )
)

(define-method get_short_name
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_short_name")
  (return-type "gchar*")
)

(define-method get_uri_display
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_uri_display")
  (return-type "gchar*")
)

(define-method get_age
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_get_age")
  (return-type "gint")
)

(define-method is_local
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_is_local")
  (return-type "gboolean")
)

(define-method exists
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_exists")
  (return-type "gboolean")
)

(define-method match
  (of-object "GtkRecentInfo")
  (c-name "gtk_recent_info_match")
  (return-type "gboolean")
  (parameters
    '("GtkRecentInfo*" "info_b")
  )
)

(define-virtual changed
  (of-object "GtkRecentManager")
  (return-type "none")
)



;; From gtkruler.h



;; From gtkscale.h



;; From gtkscrollbar.h



;; From gtkscrolledwindow.h

(define-method unset_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_unset_placement")
  (return-type "none")
)



;; From gtkselection.h

(define-function target_list_add_rich_text_targets
  (c-name "gtk_target_list_add_rich_text_targets")
  (return-type "none")
  (parameters
    '("guint" "info")
    '("gboolean" "deserializable")
    '("GtkTextBuffer*" "buffer")
  )
)

(define-function target_table_new_from_list
  (c-name "gtk_target_table_new_from_list")
  (return-type "GtkTargetEntry*")
  (parameters
    '("GtkTargetList*" "list")
    '("gint*" "n_targets")
  )
)

(define-function target_table_free
  (c-name "gtk_target_table_free")
  (return-type "none")
  (parameters
    '("GtkTargetEntry*" "targets")
    '("gint" "n_targets")
  )
)

(define-method targets_include_rich_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_targets_include_rich_text")
  (return-type "gboolean")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method targets_include_uri
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_targets_include_uri")
  (return-type "gboolean")
)

(define-function targets_include_text
  (c-name "gtk_targets_include_text")
  (return-type "gboolean")
  (parameters
    '("GdkAtom*" "targets")
    '("gint" "n_targets")
  )
)

(define-function targets_include_rich_text
  (c-name "gtk_targets_include_rich_text")
  (return-type "gboolean")
  (parameters
    '("GdkAtom*" "targets")
    '("gint" "n_targets")
    '("GtkTextBuffer*" "buffer")
  )
)

(define-function targets_include_image
  (c-name "gtk_targets_include_image")
  (return-type "gboolean")
  (parameters
    '("GdkAtom*" "targets")
    '("gint" "n_targets")
    '("gboolean" "writable")
  )
)

(define-function targets_include_uri
  (c-name "gtk_targets_include_uri")
  (return-type "gboolean")
  (parameters
    '("GdkAtom*" "targets")
    '("gint" "n_targets")
  )
)

(define-function target_list_get_type
  (c-name "gtk_target_list_get_type")
  (return-type "GType")
)



;; From gtkseparator.h



;; From gtkseparatormenuitem.h



;; From gtkseparatortoolitem.h



;; From gtksettings.h



;; From gtksignal.h



;; From gtksizegroup.h

(define-method get_widgets
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_get_widgets")
  (return-type "GSList*")
)



;; From gtksocket.h



;; From gtkspinbutton.h

(define-virtual wrapped
  (of-object "GtkSpinButton")
  (return-type "none")
)



;; From gtkstatusbar.h



;; From gtkstatusicon.h

(define-function status_icon_get_type
  (c-name "gtk_status_icon_get_type")
  (return-type "GType")
)

(define-function status_icon_new
  (c-name "gtk_status_icon_new")
  (caller-owns-return #t)
  (is-constructor-of "GtkStatusIcon")
  (return-type "GtkStatusIcon*")
)

(define-function status_icon_new_from_pixbuf
  (is-constructor-of "GtkStatusIcon")
  (c-name "gtk_status_icon_new_from_pixbuf")
  (caller-owns-return #t)
  (return-type "GtkStatusIcon*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function status_icon_new_from_file
  (c-name "gtk_status_icon_new_from_file")
  (is-constructor-of "GtkStatusIcon")
  (caller-owns-return #t)
  (return-type "GtkStatusIcon*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function status_icon_new_from_stock
  (c-name "gtk_status_icon_new_from_stock")
  (is-constructor-of "GtkStatusIcon")
  (caller-owns-return #t)
  (return-type "GtkStatusIcon*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-function status_icon_new_from_icon_name
  (c-name "gtk_status_icon_new_from_icon_name")
  (is-constructor-of "GtkStatusIcon")
  (caller-owns-return #t)
  (return-type "GtkStatusIcon*")
  (parameters
    '("const-gchar*" "icon_name")
  )
)
(define-method set_from_pixbuf
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_from_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf" (null-ok))
  )
)

(define-method set_from_file
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_from_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method set_from_stock
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_from_stock")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method set_from_icon_name
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_from_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name")
  )
)

(define-method get_storage_type
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_storage_type")
  (return-type "GtkImageType")
)

(define-method get_pixbuf
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method get_stock
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_stock")
  (return-type "const-gchar*")
)

(define-method get_icon_name
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_icon_name")
  (return-type "const-gchar*")
)

(define-method get_size
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_size")
  (return-type "gint")
)

(define-method set_tooltip
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_tooltip")
  (return-type "none")
  (parameters
    '("const-gchar*" "tooltip_text" (null-ok))
  )
)

(define-method set_visible
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visible
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_visible")
  (return-type "gboolean")
)

(define-method set_blinking
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_set_blinking")
  (return-type "none")
  (parameters
    '("gboolean" "blinking")
  )
)

(define-method get_blinking
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_blinking")
  (return-type "gboolean")
)

(define-method is_embedded
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_is_embedded")
  (return-type "gboolean")
)

(define-method position_menu
  (c-name "gtk_status_icon_position_menu")
  (of-object "GtkStatusIcon")
  (return-type "none")
  (parameters
    '("GtkMenu*" "menu")
    '("gint*" "x")
    '("gint*" "y")
    '("gboolean*" "push_in")
    '("gpointer" "user_data")
  )
  (static #t)
)

(define-method get_geometry
  (of-object "GtkStatusIcon")
  (c-name "gtk_status_icon_get_geometry")
  (return-type "gboolean")
  (parameters
    '("GdkScreen**" "screen")
    '("GdkRectangle*" "area")
    '("GtkOrientation*" "orientation")
  )
)

(define-virtual activate
  (of-object "GtkStatusIcon")
  (return-type "none")
)

(define-virtual popup_menu
  (of-object "GtkStatusIcon")
  (return-type "none")
  (parameters
    '("guint" "button")
    '("guint32" "activate_time")
  )
)

(define-virtual size_changed
  (of-object "GtkStatusIcon")
  (return-type "gboolean")
  (parameters
    '("gint" "size")
  )
)



;; From gtkstock.h



;; From gtkstyle.h

(define-method lookup_color
  (of-object "GtkStyle")
  (c-name "gtk_style_lookup_color")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "color_name")
    '("GdkColor*" "color")
  )
)



;; From gtktable.h



;; From gtktearoffmenuitem.h



;; From gtktextbuffer.h

(define-method get_has_selection
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_has_selection")
  (return-type "gboolean")
)

(define-method get_copy_target_list
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_copy_target_list")
  (return-type "GtkTargetList*")
)

(define-method get_paste_target_list
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_paste_target_list")
  (return-type "GtkTargetList*")
)



;; From gtktextbufferrichtext.h

(define-method register_serialize_format
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_register_serialize_format")
  (return-type "GdkAtom")
  (parameters
    '("const-gchar*" "mime_type")
    '("GtkTextBufferSerializeFunc" "function")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_destroy")
  )
)

(define-method register_serialize_tagset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_register_serialize_tagset")
  (return-type "GdkAtom")
  (parameters
    '("const-gchar*" "tagset_name" (null-ok) (default "NULL"))
  )
)

(define-method register_deserialize_format
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_register_deserialize_format")
  (return-type "GdkAtom")
  (parameters
    '("const-gchar*" "mime_type")
    '("GtkTextBufferDeserializeFunc" "function")
    '("gpointer" "user_data")
    '("GDestroyNotify" "user_data_destroy")
  )
)

(define-method register_deserialize_tagset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_register_deserialize_tagset")
  (return-type "GdkAtom")
  (parameters
    '("const-gchar*" "tagset_name" (null-ok) (default "NULL"))
  )
)

(define-method unregister_serialize_format
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_unregister_serialize_format")
  (return-type "none")
  (parameters
    '("GdkAtom" "format")
  )
)

(define-method unregister_deserialize_format
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_unregister_deserialize_format")
  (return-type "none")
  (parameters
    '("GdkAtom" "format")
  )
)

(define-method deserialize_set_can_create_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_deserialize_set_can_create_tags")
  (return-type "none")
  (parameters
    '("GdkAtom" "format")
    '("gboolean" "can_create_tags")
  )
)

(define-method deserialize_get_can_create_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_deserialize_get_can_create_tags")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "format")
  )
)

(define-method get_serialize_formats
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_serialize_formats")
  (return-type "GdkAtom*")
  (parameters
    '("gint*" "n_formats")
  )
)

(define-method get_deserialize_formats
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_deserialize_formats")
  (return-type "GdkAtom*")
  (parameters
    '("gint*" "n_formats")
  )
)

(define-method serialize
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_serialize")
  (return-type "guint8*")
  (parameters
    '("GtkTextBuffer*" "content_buffer")
    '("GdkAtom" "format")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gsize*" "length")
  )
)

(define-method deserialize
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_deserialize")
  (return-type "gboolean")
  (parameters
    '("GtkTextBuffer*" "content_buffer")
    '("GdkAtom" "format")
    '("GtkTextIter*" "iter")
    '("const-guint8*" "data")
    '("gsize" "length")
    '("GError**" "error")
  )
)



;; From gtktextchild.h



;; From gtktextdisplay.h



;; From gtktext.h



;; From gtktextiter.h



;; From gtktextlayout.h



;; From gtktextmark.h



;; From gtktexttag.h



;; From gtktexttagtable.h



;; From gtktextview.h



;; From gtktipsquery.h



;; From gtktoggleaction.h



;; From gtktogglebutton.h



;; From gtktoggletoolbutton.h



;; From gtktoolbar.h



;; From gtktoolbutton.h



;; From gtktoolitem.h



;; From gtktooltips.h



;; From gtktreednd.h



;; From gtktree.h



;; From gtktreeitem.h



;; From gtktreemodelfilter.h



;; From gtktreemodel.h



;; From gtktreemodelsort.h



;; From gtktreeselection.h



;; From gtktreesortable.h



;; From gtktreestore.h

(define-method insert_with_values
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_with_values")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("gint" "position")
  )
  (varargs #t)
)

(define-method insert_with_valuesv
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_with_valuesv")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("gint" "position")
    '("gint*" "columns")
    '("GValue*" "values")
    '("gint" "n_values")
  )
)



;; From gtktreeviewcolumn.h



;; From gtktreeview.h

(define-method get_headers_clickable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_headers_clickable")
  (return-type "gboolean")
)

(define-method get_search_entry
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_entry")
  (return-type "GtkEntry*")
)

(define-method set_search_entry
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_entry")
  (return-type "none")
  (parameters
    '("GtkEntry*" "entry" (null-ok) (default "NULL"))
  )
)

(define-method get_search_position_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_position_func")
  (return-type "GtkTreeViewSearchPositionFunc")
)

(define-method set_search_position_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_position_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewSearchPositionFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_rubber_banding
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_rubber_banding")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_rubber_banding
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_rubber_banding")
  (return-type "gboolean")
)

(define-method get_grid_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_grid_lines")
  (return-type "GtkTreeViewGridLines")
)

(define-method set_grid_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_grid_lines")
  (return-type "none")
  (parameters
    '("GtkTreeViewGridLines" "grid_lines")
  )
)

(define-method get_enable_tree_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_enable_tree_lines")
  (return-type "gboolean")
)

(define-method set_enable_tree_lines
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_enable_tree_lines")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)



;; From gtktypebuiltins.h

(define-function assistant_page_type_get_type
  (c-name "gtk_assistant_page_type_get_type")
  (return-type "GType")
)

(define-function cell_renderer_accel_mode_get_type
  (c-name "gtk_cell_renderer_accel_mode_get_type")
  (return-type "GType")
)

(define-function sensitivity_type_get_type
  (c-name "gtk_sensitivity_type_get_type")
  (return-type "GType")
)

(define-function print_pages_get_type
  (c-name "gtk_print_pages_get_type")
  (return-type "GType")
)

(define-function page_set_get_type
  (c-name "gtk_page_set_get_type")
  (return-type "GType")
)

(define-function page_orientation_get_type
  (c-name "gtk_page_orientation_get_type")
  (return-type "GType")
)

(define-function print_quality_get_type
  (c-name "gtk_print_quality_get_type")
  (return-type "GType")
)

(define-function print_duplex_get_type
  (c-name "gtk_print_duplex_get_type")
  (return-type "GType")
)

(define-function unit_get_type
  (c-name "gtk_unit_get_type")
  (return-type "GType")
)

(define-function tree_view_grid_lines_get_type
  (c-name "gtk_tree_view_grid_lines_get_type")
  (return-type "GType")
)

(define-function print_operation_action_get_type
  (c-name "gtk_print_operation_action_get_type")
  (return-type "GType")
)

(define-function recent_sort_type_get_type
  (c-name "gtk_recent_sort_type_get_type")
  (return-type "GType")
)

(define-function recent_chooser_error_get_type
  (c-name "gtk_recent_chooser_error_get_type")
  (return-type "GType")
)

(define-function recent_filter_flags_get_type
  (c-name "gtk_recent_filter_flags_get_type")
  (return-type "GType")
)

(define-function recent_manager_error_get_type
  (c-name "gtk_recent_manager_error_get_type")
  (return-type "GType")
)

(define-function text_buffer_target_info_get_type
  (c-name "gtk_text_buffer_target_info_get_type")
  (return-type "GType")
)



;; From gtktypeutils.h



;; From gtkuimanager.h



;; From gtkvbbox.h



;; From gtkvbox.h



;; From gtkversion.h



;; From gtkviewport.h



;; From gtkvpaned.h



;; From gtkvruler.h



;; From gtkvscale.h



;; From gtkvscrollbar.h



;; From gtkvseparator.h



;; From gtkwidget.h

(define-method is_composited
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_composited")
  (return-type "gboolean")
)

(define-method input_shape_combine_mask
  (of-object "GtkWidget")
  (c-name "gtk_widget_input_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "shape_mask" (null-ok))
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-virtual composited_changed
  (of-object "GtkWidget")
  (return-type "none")
)



;; From gtkwindow.h

(define-method set_deletable
  (of-object "GtkWindow")
  (c-name "gtk_window_set_deletable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_deletable
  (of-object "GtkWindow")
  (c-name "gtk_window_get_deletable")
  (return-type "gboolean")
)

(define-method get_group
  (of-object "GtkWindow")
  (c-name "gtk_window_get_group")
  (return-type "GtkWindowGroup*")
)

