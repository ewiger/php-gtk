/* vim: set ft=cpp et: */

%%
headers
#define PANGO_ENABLE_BACKEND
#define PANGO_ENABLE_ENGINE
#include <pango/pango.h>

%%
ignore-glob
    *_get_type

%%
override pango_color_parse
PHP_METHOD
{
    /* TODO */
}

%%
ignore pango_font_description_new_from_string
%%
add-arginfo PangoFontDescription __construct
static
ZEND_BEGIN_ARG_INFO_EX(ARGINFO_NAME, 0)
    ZEND_ARG_INFO(0, str)
ZEND_END_ARG_INFO();

%%
override pango_font_description_new
PHP_METHOD
{
	char *str = NULL;
	PangoFontDescription *wrapped_obj = NULL;
    phpg_gboxed_t *pobj = NULL;

	if (!php_gtk_parse_args(ZEND_NUM_ARGS(), "|s", &str)) {
        PHPG_THROW_CONSTRUCT_EXCEPTION(PangoFontDescription);
	}

    if (str) {
        wrapped_obj = pango_font_description_from_string(str);
    } else {
        wrapped_obj = pango_font_description_new();
    }
	if (!wrapped_obj) {
        PHPG_THROW_CONSTRUCT_EXCEPTION(PangoFontDescription);
	}

    pobj = zend_object_store_get_object(this_ptr TSRMLS_CC);
    pobj->gtype = PANGO_TYPE_FONT_DESCRIPTION;
    pobj->boxed = wrapped_obj;
    pobj->free_on_destroy = TRUE;
}

%%
override pango_layout_get_pixel_extents
PHP_METHOD
{
    PangoRectangle ink, logical;

    NOT_STATIC_METHOD();

    if (!php_gtk_parse_args(ZEND_NUM_ARGS(), ""))
        return;

    pango_layout_get_pixel_extents(PANGO_LAYOUT(PHPG_GOBJECT(this_ptr)), &ink, &logical);

    php_gtk_build_value(&return_value, "((iiii)(iiii))", ink.x, ink.y, ink.width,
                        ink.height, logical.x, logical.y, logical.width,
                        logical.height);
}
